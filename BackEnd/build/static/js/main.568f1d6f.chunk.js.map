{"version":3,"sources":["store.js","actions/types.js","reducers/details.js","reducers/spider.js","reducers/index.js","components/pages/shared/MapView.js","services/httpClient.js","services/detail.service.js","services/spider.service.js","components/pages/user/Family.js","actions/details.js","actions/spider.js","Routers.js","components/layouts/Header.js","App.js","reportWebVitals.js","index.js"],"names":["middlewares","DETAIL_SUCCESS","DETAIL_FAILED","DETAIL_FETCHING","SPIDERLIST_SUCCESS","SPIDERLIST_FAILED","SPIDERLIST_FETCHING","initialState","result","isFetching","isError","appReducer","combineReducers","details","state","action","type","payload","spider","rootReducer","applyMiddleware","thunk","logger","store","createStore","useStyles","makeStyles","theme","mapStyle","width","height","MapView","listPosition","classes","className","MapContainer","center","zoom","TileLayer","attribution","url","map","val","Marker","position","lat_","long_","Popup","position_name","position_id","axios","interceptors","request","use","a","config","console","log","timeout","response","error","JSON","stringify","undefined","isCancel","Promise","reject","alert","code","message","httpClient","getAllDetail","get","res","getAllSpider","divider","margin","spacing","position_","location_id","Family","dispatch","useDispatch","allDetail","useSelector","spiderList","useEffect","detailService","data","spiderService","countGenera","id_","num","i","length","spider_id","Box","Container","sx","maxWidth","Paper","padding","Divider","TableContainer","Table","stickyHeader","aria-label","TableHead","TableRow","TableCell","align","TableBody","slice","filter","id","val2","family","author","Link","href","record_id","content","flexGrow","display","justifyContent","Routers","exact","path","component","Header","AppBar","Toolbar","Typography","variant","style","Button","color","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"6GAKIA,E,wDCLSC,EAAiB,iBACjBC,EAAgB,gBAChBC,EAAkB,kBAElBC,EAAqB,qBACrBC,EAAoB,oBACpBC,EAAsB,sBCA7BC,EAAe,CACnBC,OAAQ,KACRC,YAAY,EACZC,SAAS,GCHLH,EAAe,CACnBC,OAAQ,KACRC,YAAY,EACZC,SAAS,GCLLC,EAAaC,YAAgB,CAAEC,QFQtB,WAAmC,IAAlCC,EAAiC,uDAAzBP,EAAcQ,EAAW,uCACvCC,EAAkBD,EAAlBC,KAAMC,EAAYF,EAAZE,QACd,OAAQD,GACN,KAAKb,EACH,OAAO,2BAAKW,GAAZ,IAAmBN,OAAQ,KAAMC,YAAY,EAAMC,SAAS,IAC9D,KAAKR,EACH,OAAO,2BAAKY,GAAZ,IAAmBN,OAAQ,KAAMC,YAAY,EAAOC,SAAS,IAC/D,KAAKT,EACH,OAAO,2BAAKa,GAAZ,IAAmBN,OAAQS,EAASR,YAAY,EAAOC,SAAS,IAClE,QACE,OAAOI,IElBiCI,ODQ/B,WAAmC,IAAlCJ,EAAiC,uDAAzBP,EAAcQ,EAAW,uCACvCC,EAAkBD,EAAlBC,KAAMC,EAAYF,EAAZE,QACd,OAAQD,GACN,KAAKV,EACH,OAAO,2BAAKQ,GAAZ,IAAmBN,OAAQ,KAAMC,YAAY,EAAMC,SAAS,IAC9D,KAAKL,EACH,OAAO,2BAAKS,GAAZ,IAAmBN,OAAQ,KAAMC,YAAY,EAAOC,SAAS,IAC/D,KAAKN,EACH,OAAO,2BAAKU,GAAZ,IAAmBN,OAAQS,EAASR,YAAY,EAAOC,SAAS,IAClE,QACE,OAAOI,MCZEK,EAJK,SAACL,EAAOC,GAC1B,OAAOJ,EAAWG,EAAOC,I,iBJA3Bf,EAAcoB,YAAgBC,IAAOC,KAErC,IAEeC,EAFDC,YAAYL,EAAanB,G,4KKLjCyB,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,SAAU,CACR,uBAAwB,CACtBC,MAAO,OACPC,OAAQ,aAwBCC,EAnBC,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACXC,EAAUR,IAChB,OACE,qBAAKS,UAAWD,EAAQL,SAAxB,SACE,eAACO,EAAA,EAAD,CAAcD,UAAU,WAAWE,OAAQ,CAAC,GAAI,KAAMC,KAAM,EAA5D,UACE,cAACC,EAAA,EAAD,CACEC,YAAY,yEACZC,IAAI,uDAELR,EAAaS,KAAI,SAACC,GAAD,OAChB,cAACC,EAAA,EAAD,CAA8BC,SAAU,CAACF,EAAIG,KAAMH,EAAII,OAAvD,SACE,cAACC,EAAA,EAAD,UAAQL,EAAIM,iBADDN,EAAIO,sB,iDClB3BC,IAAMC,aAAaC,QAAQC,IAA3B,+BAAAC,EAAA,MAA+B,WAAOC,GAAP,SAAAD,EAAA,6DAC7BE,QAAQC,IAAR,sBAA2BF,EAAOf,MAMlCe,EAAOG,QAAU,IAPY,kBAStBH,GATsB,2CAA/B,uDAYAL,IAAMC,aAAaQ,SAASN,KAC1B,SAACM,GAEC,OADAH,QAAQC,IAAR,eAAoBE,IACbA,IAHX,+BAAAL,EAAA,MAKE,WAAOM,GAAP,SAAAN,EAAA,yDACEE,QAAQC,IAAII,KAAKC,UAAUF,OAAOG,EAAW,KAEzCb,IAAMc,SAASJ,GAHrB,yCAIWK,QAAQC,OAAON,IAJ1B,UAKcA,EAAMD,SALpB,uBAMIQ,MAAMN,KAAKC,UAAUF,IANzB,kBAOWK,QAAQC,OAAO,CACpBE,KAAM,sBACNC,QAAS,iDATf,gCAYSJ,QAAQC,OAAON,IAZxB,2CALF,uDAqBO,IAAMU,EAAapB,IC9BX,GACbqB,aAPgB,uCAAG,4BAAAjB,EAAA,sEACDgB,EAAWE,IAAI,WADd,cACbC,EADa,OAEnBjB,QAAQC,IAAR,cAAmBgB,IAFA,kBAGZA,GAHY,2CAAH,sDCMH,GACbC,aAPgB,uCAAG,4BAAApB,EAAA,sEACDgB,EAAWE,IAAI,cADd,cACbC,EADa,OAEnBjB,QAAQC,IAAR,cAAmBgB,IAFA,kBAGZA,GAHY,2CAAH,sDCuBZhD,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCgD,QAAS,CACPC,OAAQjD,EAAMkD,QAAQ,EAAG,QAIvBC,EAAY,CAChB,CACE7B,YAAa,EACb8B,YAAa,EACb/B,cAAe,gBACfH,KAAM,OACNC,MAAO,UA8EIkC,GA1EA,WACb,IAAM/C,EAAUR,IACVwD,EAAWC,cACDC,EAAcC,aAAY,SAACtE,GAAD,OAAWA,EAAMD,WAAnDL,OACQ6E,EAAeD,aAAY,SAACtE,GAAD,OAAWA,EAAMI,UAApDV,OAER8E,qBAAU,WACRL,EC5CwB,uCAAM,WAAOA,GAAP,eAAA3B,EAAA,+EAEZiC,EAAchB,eAFF,OAExBE,EAFwB,OAG9BjB,QAAQC,IAAI,SAAUgB,GAClBA,GACFQ,EAAS,CACPjE,KAAMf,EACNgB,QAASwD,EAAIe,OAPa,gDAW9BP,EAAS,CACPjE,KAAMd,IAERsD,QAAQC,IAAR,uCAd8B,yDAAN,uDD6CxBwB,EEzCwB,uCAAM,WAAOA,GAAP,eAAA3B,EAAA,+EAEZmC,EAAcf,eAFF,OAExBD,EAFwB,OAG9BjB,QAAQC,IAAI,SAAUgB,GAClBA,GACFQ,EAAS,CACPjE,KAAMZ,EACNa,QAASwD,EAAIe,OAPa,gDAW9BP,EAAS,CACPjE,KAAMX,IAERmD,QAAQC,IAAR,uCAd8B,yDAAN,yDF0CvB,IAEH,IAAMiC,EAAc,SAACC,GAEnB,IADA,IAAIC,EAAM,EACDC,EAAI,EAAGA,EAAIV,EAAUW,OAAQD,IAChCV,EAAUU,GAAGE,WAAaJ,GAC5BC,IAGJ,OAAOA,GAGT,OACE,cAACI,EAAA,EAAD,CAAK9D,UAAS,OAAd,SACE,eAAC+D,EAAA,EAAD,CAAWC,GAAI,CAAEC,SAAU,MAA3B,UACE,cAACC,EAAA,EAAD,CACEF,GAAI,CACFG,QAAS,MAFb,SAKE,cAAC,EAAD,CAASrE,aAAc8C,MAEzB,cAACwB,EAAA,EAAD,CAASpE,UAAWD,EAAQ0C,UAC5B,cAAC4B,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAOC,cAAY,EAACC,aAAW,eAA/B,UACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,qBACA,cAACA,EAAA,EAAD,qBACA,cAACA,EAAA,EAAD,CAAWC,MAAM,QAAjB,sBACA,cAACD,EAAA,EAAD,CAAWC,MAAM,QAAjB,yBAGJ,cAACC,EAAA,EAAD,UACG1B,GACCA,EAAW5C,KAAI,SAACC,GACd,OACEyC,GACAA,EACG6B,MAAM,EAAG,GACTC,QAAO,SAACC,GAAD,OAAQxE,EAAIqD,YAAcmB,EAAGnB,aACpCtD,KAAI,SAAC0E,GAAD,OACH,eAACP,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UAAYnE,EAAI0E,SAChB,cAACP,EAAA,EAAD,UAAYM,EAAKE,SACjB,cAACR,EAAA,EAAD,CAAWC,MAAM,QAAjB,SACGpB,EAAYhD,EAAIqD,aAEnB,eAACc,EAAA,EAAD,CAAWC,MAAM,QAAjB,UACE,cAACQ,EAAA,EAAD,CAAMC,KAAK,IAAX,oBADF,YAEE,cAACD,EAAA,EAAD,CAAMC,KAAK,IAAX,yBARWJ,EAAKK,wBAiBnChE,QAAQC,IAAI,UAAW0B,SGvG1B1D,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvC8F,QAAS,CACPC,SAAU,EACVC,QAAS,OACTC,eAAgB,SAChBvB,QAAS,OAiBEwB,GAbC,WACd,IAAM5F,EAAUR,KAEhB,OACE,cAACwE,EAAA,EAAD,CAAW/D,UAAWD,EAAQwF,QAAStB,UAAU,EAAjD,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO2B,OAAK,EAACC,KAAK,IAAIC,UAAWhD,KACjC,cAAC,IAAD,CAAO8C,OAAK,EAACC,KAAK,UAAUC,UAAWhD,W,iDCZzCvD,GAAYC,aAAW,SAACC,GAAD,MAAY,MAgC1BsG,GAnBA,WACGxG,KAChB,OACE,8BACE,cAACyG,GAAA,EAAD,CAAQtF,SAAS,QAAjB,SACE,eAACuF,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAYC,QAAQ,KAAKL,UAAU,MAAnC,6BAGA,qBAAKM,MAAO,CAAEZ,SAAU,KACxB,cAACa,GAAA,EAAD,CAAQF,QAAQ,WAAWG,MAAM,UAAU1B,MAAM,QAAjD,2BCZK2B,OAbf,WACE,OACE,cAAC,KAAD,UACE,sBAAKH,MAAO,CAAEX,QAAS,QAAvB,UACE,cAAC,WAAD,UACE,cAAC,GAAD,MAEF,cAAC,GAAD,UCHOe,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCCdQ,IAASC,OACP,cAAC,IAAD,CAAU7H,MAAOA,EAAjB,SACE,cAAC,GAAD,MAEF8H,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.568f1d6f.chunk.js","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\nimport logger from \"redux-logger\";\n\nvar middlewares = null;\n\nmiddlewares = applyMiddleware(thunk, logger);\n\nconst store = createStore(rootReducer, middlewares);\n\nexport default store;\n","export const DETAIL_SUCCESS = \"DETAIL_SUCCESS\";\nexport const DETAIL_FAILED = \"DETAIL_FAILED\";\nexport const DETAIL_FETCHING = \"DETAIL_FETCHING\";\n\nexport const SPIDERLIST_SUCCESS = \"SPIDERLIST_SUCCESS\";\nexport const SPIDERLIST_FAILED = \"SPIDERLIST_FAILED\";\nexport const SPIDERLIST_FETCHING = \"SPIDERLIST_FETCHING\";\n","import {\n  DETAIL_SUCCESS,\n  DETAIL_FAILED,\n  DETAIL_FETCHING,\n} from \"../actions/types\";\n\nconst initialState = {\n  result: null,\n  isFetching: false,\n  isError: false,\n};\n\nexport default (state = initialState, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case DETAIL_FETCHING:\n      return { ...state, result: null, isFetching: true, isError: false };\n    case DETAIL_FAILED:\n      return { ...state, result: null, isFetching: false, isError: true };\n    case DETAIL_SUCCESS:\n      return { ...state, result: payload, isFetching: false, isError: false };\n    default:\n      return state;\n  }\n};\n","import {\n  SPIDERLIST_SUCCESS,\n  SPIDERLIST_FAILED,\n  SPIDERLIST_FETCHING,\n} from \"../actions/types\";\n\nconst initialState = {\n  result: null,\n  isFetching: false,\n  isError: false,\n};\n\nexport default (state = initialState, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case SPIDERLIST_FETCHING:\n      return { ...state, result: null, isFetching: true, isError: false };\n    case SPIDERLIST_FAILED:\n      return { ...state, result: null, isFetching: false, isError: true };\n    case SPIDERLIST_SUCCESS:\n      return { ...state, result: payload, isFetching: false, isError: false };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport details from \"./details\";\nimport spider from \"./spider\";\n\nconst appReducer = combineReducers({ details, spider });\n\nconst rootReducer = (state, action) => {\n  return appReducer(state, action);\n};\n\nexport default rootReducer;\n","import { makeStyles } from \"@material-ui/core\";\nimport React from \"react\";\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\n\nconst useStyles = makeStyles((theme) => ({\n  mapStyle: {\n    \"& .leaflet-container\": {\n      width: \"100%\",\n      height: \"50vh\",\n    },\n  },\n}));\n\nconst MapView = ({ listPosition }) => {\n  const classes = useStyles();\n  return (\n    <div className={classes.mapStyle}>\n      <MapContainer className=\"map-view\" center={[13, 100]} zoom={5}>\n        <TileLayer\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n        {listPosition.map((val) => (\n          <Marker key={val.position_id} position={[val.lat_, val.long_]}>\n            <Popup>{val.position_name}</Popup>\n          </Marker>\n        ))}\n      </MapContainer>\n    </div>\n  );\n};\n\nexport default MapView;\n","import axios from \"axios\";\nimport join from \"url-join\";\n\nconst isAbsoluteURLRegex = /^(?:\\w+:)\\/\\//;\n\naxios.interceptors.request.use(async (config) => {\n  console.log(`config url: ${config.url}`);\n  // if (!isAbsoluteURLRegex.test(config.url)) {\n  //   config.url = join(process.env.REACT_APP_API_URL, config.url);\n  //   console.log(`req url: ${config.url}`);\n  // }\n\n  config.timeout = 900000; // 10 Second\n\n  return config;\n});\n\naxios.interceptors.response.use(\n  (response) => {\n    console.log(`res: ${response}`);\n    return response;\n  },\n  async (error) => {\n    console.log(JSON.stringify(error, undefined, 2));\n\n    if (axios.isCancel(error)) {\n      return Promise.reject(error);\n    } else if (!error.response) {\n      alert(JSON.stringify(error));\n      return Promise.reject({\n        code: \"NOT_CONNECT_NETWORK\",\n        message: \"Cannot connect to server, Please try again.\",\n      });\n    }\n    return Promise.reject(error);\n  }\n);\n\nexport const httpClient = axios;\n","import { httpClient } from \"./httpClient\";\n\nconst getAllDetail = async () => {\n  const res = await httpClient.get(\"details\");\n  console.log(`res ${res}`);\n  return res;\n};\n\nexport default {\n  getAllDetail,\n};\n","import { httpClient } from \"./httpClient\";\n\nconst getAllSpider = async () => {\n  const res = await httpClient.get(\"spiderList\");\n  console.log(`res ${res}`);\n  return res;\n};\n\nexport default {\n  getAllSpider,\n};\n","import {\n  Box,\n  Card,\n  Container,\n  Divider,\n  Grid,\n  IconButton,\n  Link,\n  makeStyles,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from \"@material-ui/core\";\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport MapView from \"../shared/MapView\";\n\nimport { getAllDetail } from \"../../../actions/details\";\nimport { getAllSpider } from \"../../../actions/spider\";\nimport { Search } from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme) => ({\n  divider: {\n    margin: theme.spacing(2, 0),\n  },\n}));\n\nconst position_ = [\n  {\n    position_id: 1,\n    location_id: 1,\n    position_name: \"Doi Inthaonon\",\n    lat_: 18.588,\n    long_: 98.4871,\n  },\n];\n\nconst Family = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { result: allDetail } = useSelector((state) => state.details);\n  const { result: spiderList } = useSelector((state) => state.spider);\n\n  useEffect(() => {\n    dispatch(getAllDetail());\n    dispatch(getAllSpider());\n  }, []);\n\n  const countGenera = (id_) => {\n    let num = 0;\n    for (let i = 0; i < allDetail.length; i++) {\n      if (allDetail[i].spider_id == id_) {\n        num++;\n      }\n    }\n    return num;\n  };\n\n  return (\n    <Box className={`page`}>\n      <Container sx={{ maxWidth: \"lg\" }}>\n        <Paper\n          sx={{\n            padding: \"10\",\n          }}\n        >\n          <MapView listPosition={position_} />\n        </Paper>\n        <Divider className={classes.divider} />\n        <TableContainer>\n          <Table stickyHeader aria-label=\"sticky table\">\n            <TableHead>\n              <TableRow>\n                <TableCell>Family</TableCell>\n                <TableCell>Author</TableCell>\n                <TableCell align=\"right\"># genera</TableCell>\n                <TableCell align=\"right\">Action</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {spiderList &&\n                spiderList.map((val) => {\n                  return (\n                    allDetail &&\n                    allDetail\n                      .slice(0, 1)\n                      .filter((id) => val.spider_id === id.spider_id)\n                      .map((val2) => (\n                        <TableRow key={val2.record_id}>\n                          <TableCell>{val.family}</TableCell>\n                          <TableCell>{val2.author}</TableCell>\n                          <TableCell align=\"right\">\n                            {countGenera(val.spider_id)}\n                          </TableCell>\n                          <TableCell align=\"right\">\n                            <Link href=\"#\">genera</Link>&nbsp;|&nbsp;\n                            <Link href=\"#\">Search</Link>\n                          </TableCell>\n                        </TableRow>\n                      ))\n                  );\n                })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        {console.log(\"family \", allDetail)}\n      </Container>\n    </Box>\n  );\n};\n\nexport default Family;\n","import { DETAIL_SUCCESS, DETAIL_FAILED, DETAIL_FETCHING } from \"./types\";\n\nimport detailService from \"../services/detail.service\";\n\nexport const getAllDetail = () => async (dispatch) => {\n  try {\n    const res = await detailService.getAllDetail();\n    console.log(\"res = \", res);\n    if (res) {\n      dispatch({\n        type: DETAIL_SUCCESS,\n        payload: res.data,\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: DETAIL_FAILED,\n    });\n    console.log(`get all detail error: ${err}`);\n  }\n};\n","import {\n  SPIDERLIST_SUCCESS,\n  SPIDERLIST_FAILED,\n  SPIDERLIST_FETCHING,\n} from \"./types\";\n\nimport spiderService from \"../services/spider.service\";\n\nexport const getAllSpider = () => async (dispatch) => {\n  try {\n    const res = await spiderService.getAllSpider();\n    console.log(\"res = \", res);\n    if (res) {\n      dispatch({\n        type: SPIDERLIST_SUCCESS,\n        payload: res.data,\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: SPIDERLIST_FAILED,\n    });\n    console.log(`get all spider error: ${err}`);\n  }\n};\n","import React from \"react\";\nimport { Route, Redirect, Switch } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { Container, makeStyles } from \"@material-ui/core\";\nimport Family from \"./components/pages/user/Family\";\n\nconst useStyles = makeStyles((theme) => ({\n  content: {\n    flexGrow: 1,\n    display: \"flex\",\n    justifyContent: \"center\",\n    padding: 0,\n  },\n}));\n\nconst Routers = () => {\n  const classes = useStyles();\n\n  return (\n    <Container className={classes.content} maxWidth={false}>\n      <Switch>\n        <Route exact path=\"/\" component={Family} />\n        <Route exact path=\"/Family\" component={Family} />\n      </Switch>\n    </Container>\n  );\n};\n\nexport default Routers;\n","import {\n  AppBar,\n  Toolbar,\n  Typography,\n  Box,\n  Button,\n  makeStyles,\n} from \"@material-ui/core\";\nimport React, { useEffect } from \"react\";\n\nconst useStyles = makeStyles((theme) => ({\n  //   root: {\n  //     display: \"flxed\",\n  //   },\n  //   appBar: {\n  //     zIndex: theme.zIndex.drawer + 1,\n  //     transition: theme.transitions.create([\"width\", \"margin\"], {\n  //       easing: theme.transitions.easing.sharp,\n  //       duration: theme.transitions.duration.leavingScreen,\n  //     }),\n  //   },\n}));\n\nconst Header = () => {\n  const classes = useStyles();\n  return (\n    <div>\n      <AppBar position=\"fixed\">\n        <Toolbar>\n          <Typography variant=\"h4\" component=\"div\">\n            Spider Thailand\n          </Typography>\n          <div style={{ flexGrow: 1 }}></div>\n          <Button variant=\"outlined\" color=\"inherit\" align=\"right\">\n            Login\n          </Button>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default Header;\n","import \"./App.css\";\nimport React, { useState, Fragment } from \"react\";\nimport Routers from \"./Routers\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Header from \"./components/layouts/Header\";\n// import \"leaflet/dist/leaflet.css\";\n\nfunction App() {\n  return (\n    <Router>\n      <div style={{ display: \"flex\" }}>\n        <Fragment>\n          <Header />\n        </Fragment>\n        <Routers />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}