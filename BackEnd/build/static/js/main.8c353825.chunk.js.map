{"version":3,"sources":["store.js","actions/types.js","reducers/family.js","reducers/genus.js","reducers/auth.js","reducers/species.js","reducers/province.js","reducers/district.js","reducers/detail.js","reducers/location.js","reducers/address.js","reducers/image.js","reducers/paper.js","reducers/index.js","components/pages/shared/MapView.js","services/httpClient.js","services/family.service.js","actions/family.js","services/genus.service.js","actions/genus.js","services/province.service.js","actions/province.js","services/district.service.js","actions/district.js","services/detail.service.js","actions/detail.js","services/location.service.js","services/address.service.js","services/species.service.js","actions/species.js","components/pages/shared/FamilyTable.js","components/pages/shared/GenusTable.js","components/pages/shared/SpeciesTable.js","components/pages/shared/slideArrow/index.js","components/pages/shared/PaperPopup.js","components/pages/Home.js","actions/location.js","actions/address.js","services/auth.service.js","components/pages/Login.js","actions/auth.js","services/paper.service.js","services/image.service.js","components/pages/admin/insertFn.js","components/pages/admin/validate.js","components/pages/admin/InsertForm.js","components/pages/user/Detail.js","components/pages/admin/Manage.js","components/pages/admin/EditDetailForm.js","Routers.js","components/layouts/listButton/insertList.js","components/layouts/menu/ButtonAppBar.js","components/layouts/menu/MenuBar.js","components/layouts/Header.js","App.js","reportWebVitals.js","index.js"],"names":["middlewares","FAMILY_SUCCESS","FAMILY_FAILED","FAMILY_FETCHING","GENUS_SUCCESS","GENUS_FAILED","GENUS_FETCHING","SPECIES_SUCCESS","SPECIES_FAILED","SPECIES_FETCHING","PROVINCE_SUCCESS","PROVINCE_FAILED","PROVINCE_FETCHING","DISTRICT_SUCCESS","DISTRICT_FAILED","DISTRICT_FETCHING","DETAIL_SUCCESS","DETAIL_FAILED","DETAIL_FETCHING","LOCATION_SUCCESS","LOCATION_FAILED","LOCATION_FETCHING","ADDRESS_SUCCESS","ADDRESS_FAILED","ADDRESS_FETCHING","IMAGE_SUCCESS","IMAGE_FAILED","IMAGE_FETCHING","PAPER_SUCCESS","PAPER_FAILED","PAPER_FETCHING","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","initialState","result","isFetching","isError","user","JSON","parse","localStorage","getItem","isLoggedIn","initailState","appReducer","combineReducers","family","state","action","type","payload","genus","auth","species","province","district","detail","location","address","image","paper","rootReducer","applyMiddleware","thunk","logger","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","MapView","listEx","zoom","listNormal","useState","position_","setPosition_","setCenter","useEffect","console","log","data","i","length","j","push","parseFloat","latitude","longitude","style","height","MapContainer","className","center","TileLayer","attribution","url","filter","item","isNaN","map","val","index","Marker","position","Popup","name","isAbsoluteURLRegex","axios","interceptors","request","use","a","config","test","join","process","timeout","accessToken","headers","response","error","stringify","undefined","isCancel","Promise","reject","alert","code","message","httpClient","getAllFamily","get","res","postFamily","post","then","getFamily","id","dispatch","familyService","getAllGenus","postGenus","getGenus","genusService","getAllProvinces","provinceService","getAllDistrict","districtService","postDetail","updateDetailType","updateDetail","getDetail","getDetailAdmin","getAllDetail","getAllDetailAdmin","detailService","postLocation","updateLocation","getLocation","getLocationAdmin","getAllLocation","postAddress","updateAddress","getAddress","getAddressAdmin","getAllAddress","getFromLocationId","getAllSpecies","postSpecies","getSpecies","speciesService","theme","createTheme","FamilyTable","props","ToNext","ButtonStack","selectFamily","setSelectFamily","Fragment","ThemeProvider","StyledEngineProvider","injectFirst","Box","sx","display","alignItems","Typography","variant","component","flexGrow","width","FormControl","fullWidth","InputLabel","size","Select","label","labelId","onChange","e","target","value","handleOnChangeSelectFamily","MenuItem","marginBottom","TableContainer","Paper","boxShadow","border","Table","minWidth","TableHead","TableRow","TableCell","align","TableBody","self","family_id","indexOf","author","genus_id","Link","cursor","onClick","underline","GenusTable","selectGenus","setSelectGenus","filterCountSpecies","species_id","handleOnChangeSelectGenus","find","SpeciesTable","selectSpecies","setSelectSpecies","handleOnChangeSelectSpecies","detail_id","locality","href","SlideArrow","Comp","color","fontSize","borderRadius","useStyles","makeStyles","PaperPopup","positionName","List","disablePadding","ListItem","ListItemText","primary","divider","margin","spacing","dialog","backgroundColor","Home","useDispatch","dbfamily","useSelector","dbgenus","dbspecies","dbprovince","dbdistrict","dbdetail","dblocation","dbaddress","currentUser","setProvince","setDistrict","setAddress","setLocation","setDetail","setFamily","setGenus","setSpecies","setMap","show","setShow","stack","setStack","guid","setGuid","locationService","addressService","username","mapMarker","location_","address_","item2","location_id","markAddress","skip","tmpFamily","tmpGenus","tmpSpecies","tmpDetail","loc_","detail_","provinceName","family_","genus_","species_","mock","name_en","newData","newAddress","lat","long","reduceAddress","handleOnChangeAddress","tmp","tableShow","tmpShow","IconButton","disabled","ArrowBackIosNew","marginLeft","ArrowForwardIos","settings","dots","infinite","speed","slidesToShow","slidesToScroll","initialSlide","adaptiveHeight","nextArrow","KeyboardArrowRight","prevArrow","KeyboardArrowLeft","Container","maxWidth","Grid","container","xs","Collapse","in","Alert","icon","textAlign","alignItem","Autocomplete","disablePortal","options","sort","b","getOptionLabel","name_th","renderInput","params","TextField","province_id","Button","textTransform","val2","index2","API_URL","password","setItem","removeItem","root","justifyContent","rootCard","marginTop","showPassword","submit","validate","values","errors","PasswordField","isSubmitting","handleChange","setShowPassword","htmlFor","OutlinedInput","endAdornment","InputAdornment","aria-label","onMouseDown","event","preventDefault","edge","LoginButton","withStyles","palette","getContrastText","green","Login","classes","serverMessage","setServerMessage","history","handleMessage","Card","CardHeader","title","CardContent","gutterBottom","onSubmit","setSubmitting","resetForm","authService","resolve","toString","reload","catch","initialValues","handleSubmit","setFieldValue","handleClickShowPassword","handleMouseDownPassword","autoFocus","showForm","postPaper","updatePaper","getPaper","getPaperAdmin","postImage","updateImage","getImage","getImageAdmin","postGenusFn","insertId","postSpeciesFn","postDetailFn","postLocationFn","postAddressFn","locationId","postPaperFn","paperService","postImageFn","files","imageService","updateDetailTypeFn","updateDetailFn","updateLocationFn","updateAddressFn","updatePaperFn","validationSchema","Yup","shape","required","publish_year","country","country_other","altitude","method","habitat","microhabitat","designate","padding","placeholder","flexDirection","transition","placeholderImageProfile","placeholderLabel","form","InsertForm","years","setYears","formRef","useRef","success","setSuccess","dbFamily","dbGenus","dbSpecies","dbProvince","dbDistrict","showFamily","showGenus","showSpecies","status","setFiles","uploads","setUploads","tmpYesrs","nowYear","Date","getFullYear","createListYear","onDrop","useCallback","acceptedFiles","formData","FormData","file","append","Object","assign","preview","URL","createObjectURL","useDropzone","accept","maxFiles","getRootProps","getInputProps","thumbs","isDragActive","src","uploadImage","data_","checkFamily","Number","checkGenus","checkSpecies","onKeyDown","keyEvent","charCode","keyCode","Close","enableReinitialize","innerRef","scrollTo","touched","handleBlur","autoComplete","Switch","formControl","Divider","varaint","MenuProps","PaperProps","maxHeight","multiline","rows","remove","pop","paddingBottom","DeleteOutline","subIndex","marginRight","Backspace","AddAPhoto","Detail","detailId","match","image_","paper_","paddingLeft","md","lg","parseInt","path","deleteBg","Manage","openDetail","setOpenDetail","logDetail","setLogDetail","onDetail","setOnDetail","preDetail","preData","selectDetail","handleOnClickDetailId","handleOnClickDelete","active","handleOnClickActive","stickyHeader","Dialog","open","onClose","DialogTitle","DialogContent","EditDetailForm","oldDetail","setType","general","setGeneral","setPaper","setImage","setFinal","handleTypeSubmit","type_","handleLocationSubmit","checkError","resLocation","onLocation","onAddress","resAddress","handlePaperSubmit","onPaper","fontWeight","err","general_","handleGeneralSubmit","SettingsBackupRestore","onImage","handleImageSubmit","multiple","hidden","currentTarget","reader","FileReader","onloadend","readAsDataURL","content","Routers","AdminRoute","Component","rest","roles","render","to","disableGutters","exact","insertList","ButtonAppBar","link","endIcon","borderRight","mode","grey","MenuBar","listButton","React","anchorEl","setAnchorEl","Boolean","aria-controls","aria-haspopup","aria-expanded","Icon","ArrowDropDown","Menu","elevation","borderBottom","appBar","minHeight","Header","statusMenu","setStatusMenu","AppBar","Toolbar","KeyboardArrowDown","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.8c353825.chunk.js","sourcesContent":["import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\nimport logger from \"redux-logger\";\n\nvar middlewares = null;\n\nmiddlewares = applyMiddleware(thunk, logger);\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  rootReducer,\n  /* preloadedState, */ composeEnhancers(middlewares)\n);\n\n// const store = createStore(rootReducer, middlewares);\n\nexport default store;\n","export const SPIDERLIST_SUCCESS = \"SPIDERLIST_SUCCESS\";\nexport const SPIDERLIST_FAILED = \"SPIDERLIST_FAILED\";\nexport const SPIDERLIST_FETCHING = \"SPIDERLIST_FETCHING\";\n\nexport const FAMILY_SUCCESS = \"FAMILY_SUCCESS\";\nexport const FAMILY_FAILED = \"FAMILY_FAILED\";\nexport const FAMILY_FETCHING = \"FAMILY_FETCHING\";\n\nexport const GENUS_SUCCESS = \"GENUS_SUCCESS\";\nexport const GENUS_FAILED = \"GENUS_FAILED\";\nexport const GENUS_FETCHING = \"GENUS_FETCHING\";\n\nexport const SPECIES_SUCCESS = \"SPECIES_SUCCESS\";\nexport const SPECIES_FAILED = \"SPECIES_FAILED\";\nexport const SPECIES_FETCHING = \"SPECIES_FETCHING\";\n\nexport const PROVINCE_SUCCESS = \"PROVINCE_SUCCESS\";\nexport const PROVINCE_FAILED = \"PROVINCE_FAILED\";\nexport const PROVINCE_FETCHING = \"PROVINCE_FETCHING\";\n\nexport const DISTRICT_SUCCESS = \"DISTRICT_SUCCESS\";\nexport const DISTRICT_FAILED = \"DISTRICT_FAILED\";\nexport const DISTRICT_FETCHING = \"DISTRICT_FETCHING\";\n\nexport const DETAIL_SUCCESS = \"DETAIL_SUCCESS\";\nexport const DETAIL_FAILED = \"DETAIL_FAILED\";\nexport const DETAIL_FETCHING = \"DETAIL_FETCHING\";\n\nexport const LOCATION_SUCCESS = \"LOCATION_SUCCESS\";\nexport const LOCATION_FAILED = \"LOCATION_FAILED\";\nexport const LOCATION_FETCHING = \"LOCATION_FETCHING\";\n\nexport const ADDRESS_SUCCESS = \"ADDRESS_SUCCESS\";\nexport const ADDRESS_FAILED = \"ADDRESS_FAILED\";\nexport const ADDRESS_FETCHING = \"ADDRESS_FETCHING\";\n\nexport const IMAGE_SUCCESS = \"IMAGE_SUCCESS\";\nexport const IMAGE_FAILED = \"IMAGE_FAILED\";\nexport const IMAGE_FETCHING = \"IMAGE_FETCHING\";\n\nexport const PAPER_SUCCESS = \"PAPER_SUCCESS\";\nexport const PAPER_FAILED = \"PAPER_FAILED\";\nexport const PAPER_FETCHING = \"PAPER_FETCHING\";\n\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const LOGOUT = \"LOGOUT\";\n","import {\n  FAMILY_SUCCESS,\n  FAMILY_FAILED,\n  FAMILY_FETCHING,\n} from \"../actions/types\";\n\nconst initialState = {\n  result: null,\n  isFetching: false,\n  isError: false,\n};\n\nexport default (state = initialState, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case FAMILY_FETCHING:\n      return { ...state, result: null, isFetching: true, isError: false };\n    case FAMILY_FAILED:\n      return { ...state, result: null, isFetching: false, isError: true };\n    case FAMILY_SUCCESS:\n      return { ...state, result: payload, isFetching: false, isError: false };\n    default:\n      return state;\n  }\n};\n","import { GENUS_SUCCESS, GENUS_FAILED, GENUS_FETCHING } from \"../actions/types\";\n\nconst initialState = {\n  result: null,\n  isFetching: false,\n  isError: false,\n};\n\nexport default (state = initialState, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case GENUS_FETCHING:\n      return { ...state, result: null, isFetching: true, isError: false };\n    case GENUS_FAILED:\n      return { ...state, result: null, isFetching: false, isError: true };\n    case GENUS_SUCCESS:\n      return { ...state, result: payload, isFetching: false, isError: false };\n    default:\n      return state;\n  }\n};\n","import { LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT } from \"../actions/types\";\n\nconst user = JSON.parse(localStorage.getItem(\"user\"));\n\nconst initialState = user\n  ? { isLoggedIn: true, user }\n  : { isLoggedIn: false, user: null };\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case LOGIN_SUCCESS:\n      return {\n        ...state,\n        isLoggedIn: true,\n        user: payload.user,\n      };\n    case LOGIN_FAIL:\n      return {\n        ...state,\n        isLoggedIn: false,\n        user: null,\n      };\n    case LOGOUT:\n      return {\n        ...state,\n        isLoggedIn: false,\n        user: null,\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  SPECIES_SUCCESS,\n  SPECIES_FETCHING,\n  SPECIES_FAILED,\n} from \"../actions/types\";\n\nconst initailState = {\n  result: null,\n  isFetching: false,\n  isError: false,\n};\n\nexport default (state = initailState, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case SPECIES_FETCHING:\n      return { ...state, result: null, isFetching: true, isError: false };\n    case SPECIES_FAILED:\n      return { ...state, result: null, isFetching: false, isError: true };\n    case SPECIES_SUCCESS:\n      return { ...state, result: payload, isFetching: false, isError: false };\n    default:\n      return state;\n  }\n};\n","import {\n  PROVINCE_SUCCESS,\n  PROVINCE_FAILED,\n  PROVINCE_FETCHING,\n} from \"../actions/types\";\n\nconst initialState = {\n  result: null,\n  isFetching: false,\n  isError: false,\n};\n\nexport default (state = initialState, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case PROVINCE_FETCHING:\n      return { ...state, result: null, isFetching: true, isError: false };\n    case PROVINCE_FAILED:\n      return { ...state, result: null, isFetching: false, isError: true };\n    case PROVINCE_SUCCESS:\n      return { ...state, result: payload, isFetching: false, isError: false };\n    default:\n      return state;\n  }\n};\n","import {\n  DISTRICT_SUCCESS,\n  DISTRICT_FAILED,\n  DISTRICT_FETCHING,\n} from \"../actions/types\";\n\nconst initialState = {\n  result: null,\n  isFetching: false,\n  isError: false,\n};\n\nexport default (state = initialState, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case DISTRICT_FETCHING:\n      return { ...state, result: null, isFetching: true, isError: false };\n    case DISTRICT_FAILED:\n      return { ...state, result: null, isFetching: false, isError: true };\n    case DISTRICT_SUCCESS:\n      return { ...state, result: payload, isFetching: false, isError: false };\n    default:\n      return state;\n  }\n};\n","import {\n  DETAIL_SUCCESS,\n  DETAIL_FAILED,\n  DETAIL_FETCHING,\n} from \"../actions/types\";\n\nconst initialState = {\n  result: null,\n  isFetching: false,\n  isError: false,\n};\n\nexport default (state = initialState, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case DETAIL_FETCHING:\n      return { ...state, result: null, isFetching: true, isError: false };\n    case DETAIL_FAILED:\n      return { ...state, result: null, isFetching: false, isError: true };\n    case DETAIL_SUCCESS:\n      return { ...state, result: payload, isFetching: false, isError: false };\n    default:\n      return state;\n  }\n};\n","import {\n  LOCATION_SUCCESS,\n  LOCATION_FAILED,\n  LOCATION_FETCHING,\n} from \"../actions/types\";\n\nconst initialState = {\n  result: null,\n  isFetching: false,\n  isError: false,\n};\n\nexport default (state = initialState, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case LOCATION_FETCHING:\n      return { ...state, result: null, isFetching: true, isError: false };\n    case LOCATION_FAILED:\n      return { ...state, result: null, isFetching: false, isError: true };\n    case LOCATION_SUCCESS:\n      return { ...state, result: payload, isFetching: false, isError: false };\n    default:\n      return state;\n  }\n};\n","import {\n  ADDRESS_SUCCESS,\n  ADDRESS_FAILED,\n  ADDRESS_FETCHING,\n} from \"../actions/types\";\n\nconst initialState = {\n  result: null,\n  isFetching: false,\n  isError: false,\n};\n\nexport default (state = initialState, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case ADDRESS_FETCHING:\n      return { ...state, result: null, isFetching: true, isError: false };\n    case ADDRESS_FAILED:\n      return { ...state, result: null, isFetching: false, isError: true };\n    case ADDRESS_SUCCESS:\n      return { ...state, result: payload, isFetching: false, isError: false };\n    default:\n      return state;\n  }\n};\n","import { IMAGE_SUCCESS, IMAGE_FAILED, IMAGE_FETCHING } from \"../actions/types\";\n\nconst initialState = {\n  result: null,\n  isFetching: false,\n  isError: false,\n};\n\nexport default (state = initialState, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case IMAGE_FETCHING:\n      return { ...state, result: null, isFetching: true, isError: false };\n    case IMAGE_FAILED:\n      return { ...state, result: null, isFetching: false, isError: true };\n    case IMAGE_SUCCESS:\n      return { ...state, result: payload, isFetching: false, isError: false };\n    default:\n      return state;\n  }\n};\n","import { PAPER_SUCCESS, PAPER_FAILED, PAPER_FETCHING } from \"../actions/types\";\n\nconst initialState = {\n  result: null,\n  isFetching: false,\n  isError: false,\n};\n\nexport default (state = initialState, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case PAPER_FETCHING:\n      return { ...state, result: null, isFetching: true, isError: false };\n    case PAPER_FAILED:\n      return { ...state, result: null, isFetching: false, isError: true };\n    case PAPER_SUCCESS:\n      return { ...state, result: payload, isFetching: false, isError: false };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\n// import spider from \"./spider\";\nimport family from \"./family\";\nimport genus from \"./genus\";\nimport auth from \"./auth\";\nimport species from \"./species\";\nimport province from \"./province\";\nimport district from \"./district\";\nimport detail from \"./detail\";\nimport location from \"./location\";\nimport address from \"./address\";\nimport image from \"./image\";\nimport paper from \"./paper\";\n\nconst appReducer = combineReducers({\n  family,\n  genus,\n  auth,\n  species,\n  province,\n  district,\n  detail,\n  location,\n  address,\n  image,\n  paper,\n});\n\nconst rootReducer = (state, action) => {\n  return appReducer(state, action);\n};\n\nexport default rootReducer;\n","import React, { useEffect, useState } from \"react\";\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\n\nconst MapView = ({ listEx, listNormal, zoom }) => {\n  const [position_, setPosition_] = useState();\n  const [center, setCenter] = useState();\n  useEffect(() => {\n    console.log(\"listEx\", listEx);\n    if (listEx) {\n      let data = [];\n      for (let i = 0; i < listEx.length; i++) {\n        for (let j = 0; j < listEx[i].address.length; j++) {\n          data.push(listEx[i].address[j]);\n        }\n      }\n      setPosition_(data);\n      setCenter([parseFloat(data[0].latitude), parseFloat(data[0].longitude)]);\n    }\n  }, [listEx]);\n  return (\n    <div style={{ height: \"100%\" }}>\n      {position_ ? (\n        <MapContainer\n          className=\"map-view\"\n          center={[\n            parseFloat(position_[0].latitude),\n            parseFloat(position_[0].longitude),\n          ]}\n          zoom={zoom || 2}\n        >\n          {/* {console.log(\"listEx\", listEx)} */}\n\n          <TileLayer\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          />\n          {position_\n            .filter((item) => {\n              console.log(\n                \"parseFloat(item.latitude)\",\n                parseFloat(item.latitude)\n              );\n              console.log(\n                \"parseFloat(item.longitude)\",\n                parseFloat(item.longitude)\n              );\n              console.log(\n                !isNaN(parseFloat(item.latitude)) &&\n                  !isNaN(parseFloat(item.longitude))\n              );\n              if (\n                !isNaN(parseFloat(item.latitude)) &&\n                !isNaN(parseFloat(item.longitude))\n              ) {\n                return true;\n              } else {\n                return false;\n              }\n            })\n            .map((val, index) => (\n              <Marker\n                key={index}\n                position={[parseFloat(val.latitude), parseFloat(val.longitude)]}\n              >\n                <Popup>{val.name}</Popup>\n              </Marker>\n            ))}\n        </MapContainer>\n      ) : (\n        <MapContainer className=\"map-view\" center={[13, 100]} zoom={zoom || 5}>\n          {/* {console.log(\"listEx\", listEx)} */}\n\n          <TileLayer\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          />\n        </MapContainer>\n      )}\n    </div>\n  );\n};\n\nexport default MapView;\n","import axios from \"axios\";\nimport join from \"url-join\";\n\nconst isAbsoluteURLRegex = /^(?:\\w+:)\\/\\//;\nconst user = JSON.parse(localStorage.getItem(\"user\"));\n\naxios.interceptors.request.use(async (config) => {\n  // console.log(`config url: ${config.url}`);\n  if (!isAbsoluteURLRegex.test(config.url)) {\n    config.url = join(process.env.REACT_APP_API_URL, config.url);\n    // console.log(`req url: ${config.url}`);\n  }\n\n  config.timeout = 900000; // 10 Second\n\n  if (user && user.accessToken) {\n    config.headers = { \"x-access-token\": user.accessToken };\n  }\n\n  return config;\n});\n\naxios.interceptors.response.use(\n  (response) => {\n    // console.log(`res: ${response}`);\n    return response;\n  },\n  async (error) => {\n    console.log(JSON.stringify(error, undefined, 2));\n\n    if (axios.isCancel(error)) {\n      return Promise.reject(error);\n    } else if (!error.response) {\n      alert(JSON.stringify(error));\n      return Promise.reject({\n        code: \"NOT_CONNECT_NETWORK\",\n        message: \"Cannot connect to server, Please try again.\",\n      });\n    }\n    return Promise.reject(error);\n  }\n);\n\nexport const httpClient = axios;\n","import { httpClient } from \"./httpClient\";\n\nconst getAllFamily = async () => {\n  const res = await httpClient.get(\"family/allfamily\");\n  // console.log(`res ${res}`);\n  return res;\n};\n\nconst postFamily = async (data) => {\n  console.log(\"services\", data);\n  const res = await httpClient\n    .post(\"family/postfamily\", { data })\n    .then((response) => {\n      return response.data;\n    });\n  // console.log(\"family post res\", res);\n  return res;\n};\n\nconst getFamily = async (id) => {\n  const res = await httpClient.get(\"family/\" + id).then((response) => {\n    return response.data;\n  });\n  return res;\n};\nexport default {\n  getAllFamily,\n  getFamily,\n  postFamily,\n};\n","import { FAMILY_SUCCESS, FAMILY_FAILED, FAMILY_FETCHING } from \"./types\";\n\nimport familyService from \"../services/family.service\";\n\nexport const getAllFamily = () => async (dispatch) => {\n  try {\n    const res = await familyService.getAllFamily();\n    // console.log(\"res = \", res);\n    if (res) {\n      dispatch({\n        type: FAMILY_SUCCESS,\n        payload: res.data,\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: FAMILY_FAILED,\n    });\n  }\n};\n\nexport const postFamily = (data) => (dispatch) => {\n  console.log(data);\n  return familyService.postFamily(data).then((data) => {\n    dispatch(getAllFamily());\n    return data;\n  });\n};\n","import { httpClient } from \"./httpClient\";\n\nconst getAllGenus = async () => {\n  const res = await httpClient.get(\"genus/allgenus\");\n  // console.log(`res genus ${res}`);\n  return res;\n};\n\nconst postGenus = async (data) => {\n  const res = await httpClient\n    .post(\"genus/postgenus\", data)\n    .then((response) => {\n      return response.data;\n    });\n\n  return res;\n};\n\nconst getGenus = async (id) => {\n  const res = await httpClient.get(\"genus/\" + id).then((response) => {\n    return response.data;\n  });\n  return res;\n};\n\nexport default {\n  getAllGenus,\n  getGenus,\n  postGenus,\n};\n","import { GENUS_SUCCESS, GENUS_FAILED, GENUS_FETCHING } from \"./types\";\n\nimport genusService from \"../services/genus.service\";\n\nexport const getAllGenus = () => async (dispatch) => {\n  try {\n    const res = await genusService.getAllGenus();\n    if (res) {\n      dispatch({\n        type: GENUS_SUCCESS,\n        payload: res.data,\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: GENUS_FAILED,\n    });\n  }\n};\n\nexport const postGenus = (data) => (dispatch) => {\n  return genusService.postGenus(data).then((data) => {\n    dispatch(getAllGenus());\n  });\n};\n","import { httpClient } from \"./httpClient\";\n\nconst getAllProvinces = async () => {\n  const res = await httpClient.get(\"getallprovinces\").then((response) => {\n    return response.data;\n  });\n  return res;\n};\n\nexport default { getAllProvinces };\n","import { PROVINCE_SUCCESS, PROVINCE_FAILED, PROVINCE_FETCHING } from \"./types\";\nimport provinceService from \"../services/province.service\";\n\nexport const getAllProvinces = () => async (dispatch) => {\n  try {\n    const res = await provinceService.getAllProvinces();\n    if (res) {\n      dispatch({\n        type: PROVINCE_SUCCESS,\n        payload: res,\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: PROVINCE_FAILED,\n    });\n  }\n};\n","import { httpClient } from \"./httpClient\";\n\nconst getAllDistrict = async () => {\n  const res = await httpClient.get(\"getalldistricts\").then((response) => {\n    return response.data;\n  });\n  return res;\n};\n\nexport default { getAllDistrict };\n","import { DISTRICT_SUCCESS, DISTRICT_FAILED, DISTRICT_FETCHING } from \"./types\";\nimport districtService from \"../services/district.service\";\n\nexport const getAllDistrict = () => async (dispatch) => {\n  try {\n    const res = await districtService.getAllDistrict();\n    if (res) {\n      dispatch({\n        type: DISTRICT_SUCCESS,\n        payload: res,\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: DISTRICT_FAILED,\n    });\n  }\n};\n","import { httpClient } from \"./httpClient\";\n\nconst postDetail = async (data) => {\n  console.log(\"services\", data);\n  const res = await httpClient\n    .post(\"detail/postDetail\", { data })\n    .then((response) => {\n      return response.data;\n    });\n  //   console.log(\"detail post res\", res);\n  return res;\n};\n\nconst updateDetailType = async (data) => {\n  console.log(\"services\", data);\n  const res = await httpClient\n    .post(\"detail/updateDatailType\", { data })\n    .then((response) => {\n      return response.data;\n    });\n  //   console.log(\"detail post res\", res);\n  return res;\n};\n\nconst updateDetail = async (data) => {\n  console.log(\"services\", data);\n  const res = await httpClient\n    .post(\"detail/updateDatail\", { data })\n    .then((response) => {\n      return response.data;\n    });\n  //   console.log(\"detail post res\", res);\n  return res;\n};\n\nconst getDetail = async (id) => {\n  const res = await httpClient.get(\"detail/get/\" + id).then((response) => {\n    return response.data;\n  });\n  console.log(\"get detail\", res);\n  return res;\n};\n\nconst getDetailAdmin = async (id) => {\n  const res = await httpClient\n    .get(\"admin/detail/get/\" + id)\n    .then((response) => {\n      return response.data;\n    });\n  console.log(\"get detail\", res);\n  return res;\n};\n\nconst getAllDetail = async () => {\n  const res = await httpClient.get(\"detail\").then((response) => {\n    return response.data;\n  });\n  return res;\n};\n\nconst getAllDetailAdmin = async () => {\n  const res = await httpClient.get(\"admin/detail\").then((response) => {\n    return response.data;\n  });\n  return res;\n};\n\nexport default {\n  postDetail,\n  getDetail,\n  getAllDetail,\n  getAllDetailAdmin,\n  updateDetail,\n  updateDetailType,\n  getDetailAdmin,\n};\n","import detailService from \"../services/detail.service\";\nimport { DETAIL_SUCCESS, DETAIL_FAILED, DETAIL_FETCHING } from \"./types\";\n\nexport const getAllDetail = () => async (dispatch) => {\n  try {\n    const res = await detailService.getAllDetail();\n    if (res) {\n      dispatch({\n        type: DETAIL_SUCCESS,\n        payload: res,\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: DETAIL_FAILED,\n    });\n  }\n};\n\nexport const getAllDetailAdmin = () => async (dispatch) => {\n  try {\n    const res = await detailService.getAllDetailAdmin();\n    if (res) {\n      dispatch({\n        type: DETAIL_SUCCESS,\n        payload: res,\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: DETAIL_FAILED,\n    });\n  }\n};\n\nexport const getDetail = (id) => async (dispatch) => {\n  try {\n    const res = await detailService.getDetail(id);\n    console.log(\"action detail res\", res);\n    if (res) {\n      dispatch({\n        type: DETAIL_SUCCESS,\n        payload: res,\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: DETAIL_FAILED,\n    });\n  }\n};\nexport const getDetailAdmin = (id) => async (dispatch) => {\n  try {\n    const res = await detailService.getDetailAdmin(id);\n    console.log(\"action detail res\", res);\n    if (res) {\n      dispatch({\n        type: DETAIL_SUCCESS,\n        payload: res,\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: DETAIL_FAILED,\n    });\n  }\n};\n","import { httpClient } from \"./httpClient\";\n\nconst postLocation = async (data) => {\n  console.log(\"services\", data);\n  const res = await httpClient\n    .post(\"/location/postLocation\", { data })\n    .then((response) => {\n      return response.data;\n    });\n  // console.log(\"family post res\", res);\n  return res;\n};\n\nconst updateLocation = async (data) => {\n  console.log(\"services\", data);\n  const res = await httpClient\n    .post(\"/location/updateLocation\", { data })\n    .then((response) => {\n      return response.data;\n    });\n  // console.log(\"family post res\", res);\n  return res;\n};\n\nconst getLocation = async (id) => {\n  const res = await httpClient.get(\"location/\" + id).then((response) => {\n    return response.data;\n  });\n  return res;\n};\n\nconst getLocationAdmin = async (id) => {\n  const res = await httpClient.get(\"admin/location/\" + id).then((response) => {\n    return response.data;\n  });\n  return res;\n};\n\nconst getAllLocation = async () => {\n  const res = await httpClient.get(\"location\").then((response) => {\n    return response.data;\n  });\n  return res;\n};\n\nexport default {\n  postLocation,\n  getLocation,\n  getAllLocation,\n  updateLocation,\n  getLocationAdmin,\n};\n","import { httpClient } from \"./httpClient\";\n\nconst postAddress = async (data) => {\n  console.log(\"services\", data);\n  const res = await httpClient\n    .post(\"address/postAddress\", { data })\n    .then((response) => {\n      return response.data;\n    });\n  return res;\n};\n\nconst updateAddress = async (data) => {\n  console.log(\"services\", data);\n  const res = await httpClient\n    .post(\"address/updateAddress\", { data })\n    .then((response) => {\n      return response.data;\n    });\n  return res;\n};\n\nconst getAddress = async (id) => {\n  const res = await httpClient.get(\"address/\" + id).then((response) => {\n    return response.data;\n  });\n  return res;\n};\n\nconst getAddressAdmin = async (id) => {\n  const res = await httpClient.get(\"admin/address/\" + id).then((response) => {\n    return response.data;\n  });\n  return res;\n};\n\nconst getAllAddress = async () => {\n  const res = await httpClient.get(\"address\").then((response) => {\n    return response.data;\n  });\n  return res;\n};\n\nconst getFromLocationId = async (id) => {\n  const res = await httpClient\n    .get(\"address/getFromLocationId/\" + id)\n    .then((response) => {\n      return response.data;\n    });\n  return res;\n};\n\nexport default {\n  postAddress,\n  getAddress,\n  getAllAddress,\n  getFromLocationId,\n  updateAddress,\n  getAddressAdmin,\n};\n","import { httpClient } from \"./httpClient\";\n\nconst getAllSpecies = async () => {\n  const res = await httpClient.get(\"species/allspecies\");\n  console.log(`res species ${res}`);\n  return res;\n};\n\nconst postSpecies = async (data) => {\n  const res = await httpClient\n    .post(\"species/postspecies\", data)\n    .then((response) => {\n      return response.data;\n    });\n  return res;\n};\n\nconst getSpecies = async (id) => {\n  const res = await httpClient.get(\"species/\" + id).then((response) => {\n    return response.data;\n  });\n  return res;\n};\n\nexport default {\n  getAllSpecies,\n  getSpecies,\n  postSpecies,\n};\n","import { SPECIES_SUCCESS, SPECIES_FAILED, SPECIES_FETCHING } from \"./types\";\n\nimport speciesService from \"../services/species.service\";\n\nexport const getAllSpecies = () => async (dispatch) => {\n  try {\n    const res = await speciesService.getAllSpecies();\n    // console.log(\"res = \", res);\n    if (res) {\n      dispatch({\n        type: SPECIES_SUCCESS,\n        payload: res.data,\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: SPECIES_FAILED,\n    });\n  }\n};\n\nexport const getDetailSpecies = (id) => async (dispatch) => {\n  try {\n    const res = await speciesService.getSpecies(id);\n\n    if (res) {\n      dispatch({\n        type: SPECIES_SUCCESS,\n        payload: res,\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: SPECIES_FAILED,\n    });\n  }\n};\n","import React, { useState, useEffect } from \"react\";\n\nimport {\n  ThemeProvider,\n  StyledEngineProvider,\n  createTheme,\n} from \"@mui/material/styles\";\n\nimport makeStyles from \"@mui/styles/makeStyles\";\n\nimport {\n  Box,\n  Button,\n  FormControl,\n  InputLabel,\n  Link,\n  MenuItem,\n  Paper,\n  Select,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Typography,\n} from \"@mui/material\";\n\nconst theme = createTheme();\n\nconst FamilyTable = (props) => {\n  const { family, detail, genus, ToNext, ButtonStack } = props;\n\n  const [selectFamily, setSelectFamily] = useState(0);\n\n  const filterCountGenus = (id) => {\n    const family_filter = detail\n      .filter((item) => item.family_id === id)\n      .filter(\n        (item, index, self) =>\n          self\n            .map((e) => {\n              return e.genus_id;\n            })\n            .indexOf(item.genus_id) === index\n      );\n\n    const number = family_filter.length;\n    return number;\n  };\n\n  const handleOnChangeSelectFamily = (e) => {\n    setSelectFamily(e.target.value);\n  };\n  return (\n    <React.Fragment>\n      <ThemeProvider theme={theme}>\n        <StyledEngineProvider injectFirst>\n          <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\n            <Typography variant=\"h6\" component={`div`}>\n              Filter type\n            </Typography>\n            <Box sx={{ flexGrow: 0.02 }} />\n            <Box sx={{ width: 160 }}>\n              <FormControl fullWidth>\n                <InputLabel id=\"Type-Of-Family\" size=\"small\">\n                  Family\n                </InputLabel>\n                <Select\n                  label=\"Family\"\n                  labelId=\"Type-Of-Family\"\n                  onChange={(e) => handleOnChangeSelectFamily(e)}\n                  value={selectFamily}\n                  size=\"small\"\n                >\n                  {family &&\n                    family.map((val, index) => (\n                      <MenuItem key={index} value={val.id}>\n                        {val.name}\n                      </MenuItem>\n                    ))}\n                  <MenuItem value={0}>All</MenuItem>\n                </Select>\n              </FormControl>\n            </Box>\n          </Box>\n\n          <br />\n          <br />\n          <Box display=\"flex\" alignItems=\"center\" sx={{ marginBottom: \"10px\" }}>\n            <Typography variant=\"h5\">Family : List</Typography>\n            <Box sx={{ flexGrow: 1 }} />\n            <ButtonStack />\n          </Box>\n          <TableContainer\n            component={Paper}\n            sx={{\n              boxShadow: \"none\",\n              border: \"1px solid #B3B6B7\",\n            }}\n          >\n            <Table sx={{ minWidth: 650 }}>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Family</TableCell>\n                  <TableCell align=\"left\">Author</TableCell>\n                  <TableCell align=\"left\"> # genera</TableCell>\n                  <TableCell align=\"left\">Action</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {detail &&\n                  detail\n                    // unique family type\n                    .filter(\n                      (item, index, self) =>\n                        self\n                          .map((e) => {\n                            return e.family_id;\n                          })\n                          .indexOf(item.family_id) === index\n                    )\n                    .filter((item) =>\n                      selectFamily != 0 ? item.family_id == selectFamily : true\n                    )\n                    .map((val, index) => (\n                      <TableRow key={index}>\n                        <TableCell>{val.family}</TableCell>\n                        <TableCell align=\"left\">{val.author}</TableCell>\n                        <TableCell align=\"left\">\n                          {filterCountGenus(val.family_id)}\n                        </TableCell>\n                        <TableCell align=\"left\">\n                          {\" \"}\n                          <Link\n                            sx={{ cursor: \"pointer\" }}\n                            onClick={() => {\n                              ToNext(\"genus\", val.family_id);\n                            }}\n                            underline=\"hover\"\n                          >\n                            Genera\n                          </Link>\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                {/* {family &&\n                  family\n                    // .filter(\n                    //   (item) =>\n                    //     detail && detail.find((val) => val.family_id == item.id)\n                    // )\n                    .map((val, index) => (\n                      <TableRow key={index}>\n                        <TableCell>{val.name}</TableCell>\n                        <TableCell align=\"center\">\n                          {detail &&\n                            detail\n                              // .slice(0, 1)\n                              .find((item) => item.family_id == val.id).author}\n                        </TableCell>\n                        <TableCell align=\"center\">\n                          {\n                            genus.filter((item) => item.family_id == val.id)\n                              .length\n                          }\n                        </TableCell>\n                        <TableCell\n                          align=\"center\"\n                          sx={{ cursor: \"pointer\" }}\n                          onClick={() => ToNext(\"genus\", val.id)}\n                        >\n                          <Link\n                            sx={{ cursor: \"pointer\" }}\n                            onClick={() => ToNext(\"genus\", val.id)}\n                          >\n                            genera\n                          </Link>\n                        </TableCell>\n                      </TableRow>\n                    ))} */}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </StyledEngineProvider>\n      </ThemeProvider>\n    </React.Fragment>\n  );\n};\n\nexport default FamilyTable;\n","import React, { useState, useEffect } from \"react\";\n\nimport {\n  ThemeProvider,\n  StyledEngineProvider,\n  createTheme,\n} from \"@mui/material/styles\";\n\nimport makeStyles from \"@mui/styles/makeStyles\";\n\nimport {\n  Box,\n  Button,\n  Link,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Typography,\n  MenuItem,\n  Select,\n  InputLabel,\n  FormControl,\n} from \"@mui/material\";\n\nconst theme = createTheme();\n\nconst GenusTable = (props) => {\n  const { family, genus, detail, species, ToNext, id, ButtonStack } = props;\n\n  const [selectGenus, setSelectGenus] = useState(0);\n\n  const filterCountSpecies = (id) => {\n    const genus_filter = detail\n      .filter((item) => item.genus_id === id)\n      .filter(\n        (item, index, self) =>\n          self\n            .map((e) => {\n              return e.species_id;\n            })\n            .indexOf(item.species_id) === index\n      );\n\n    const number = genus_filter.length;\n    return number;\n  };\n  const handleOnChangeSelectGenus = (e) => {\n    setSelectGenus(e.target.value);\n  };\n  return (\n    <React.Fragment>\n      <ThemeProvider theme={theme}>\n        <StyledEngineProvider injectFirst>\n          <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\n            <Typography variant=\"h6\" component={`div`}>\n              Filter type\n            </Typography>\n            <Box sx={{ flexGrow: 0.02 }} />\n            <Box sx={{ width: 160 }}>\n              <FormControl fullWidth>\n                <InputLabel id=\"Type-Of-Genus\" size=\"small\">\n                  Genus\n                </InputLabel>\n                <Select\n                  label=\"Genus\"\n                  labelId=\"Type-Of-Genus\"\n                  onChange={(e) => handleOnChangeSelectGenus(e)}\n                  value={selectGenus}\n                  size=\"small\"\n                >\n                  {genus &&\n                    genus\n                      .filter((item) => item.family_id == id)\n                      .map((val, index) => (\n                        <MenuItem key={index} value={val.id}>\n                          {val.name}\n                        </MenuItem>\n                      ))}\n                  <MenuItem value={0}>All</MenuItem>\n                </Select>\n              </FormControl>\n            </Box>\n          </Box>\n\n          <br />\n          <br />\n          <Box display=\"flex\" alignItems=\"center\" sx={{ marginBottom: \"10px\" }}>\n            <Typography variant=\"h5\">\n              Family: {family && family.find((item) => item.id == id).name}\n            </Typography>\n            <Box sx={{ flexGrow: 1 }} />\n            <ButtonStack />\n          </Box>\n          <TableContainer\n            component={Paper}\n            sx={{\n              boxShadow: \"none\",\n              border: \"1px solid #B3B6B7\",\n            }}\n          >\n            <Table sx={{ minWidth: 650 }}>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Genus</TableCell>\n                  <TableCell align=\"left\">Author</TableCell>\n                  <TableCell align=\"left\"> # species</TableCell>\n                  <TableCell align=\"left\">Action</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {console.log(\"detail\", detail)}\n                {detail &&\n                  detail\n                    // unique genus type\n                    .filter(\n                      (item, index, self) =>\n                        self\n                          .map((e) => {\n                            return e.genus_id;\n                          })\n                          .indexOf(item.genus_id) === index\n                    )\n                    // filter genus of family\n                    .filter((item) => item.family_id === id)\n                    .filter((item) =>\n                      selectGenus != 0 ? item.genus_id == selectGenus : true\n                    )\n                    .map((val, index) => (\n                      <TableRow key={index}>\n                        <TableCell>\n                          <i>{val.genus}</i>\n                        </TableCell>\n                        <TableCell align=\"left\">{val.author}</TableCell>\n                        <TableCell align=\"left\">\n                          {filterCountSpecies(val.genus_id)}\n                        </TableCell>\n                        <TableCell>\n                          <Link\n                            sx={{\n                              cursor: \"pointer\",\n                            }}\n                            onClick={() => ToNext(\"species\", val.genus_id)}\n                            underline=\"hover\"\n                          >\n                            species\n                          </Link>\n                        </TableCell>\n                      </TableRow>\n                    ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </StyledEngineProvider>\n      </ThemeProvider>\n    </React.Fragment>\n  );\n};\n\nexport default GenusTable;\n","import React, { useState, useEffect } from \"react\";\n\nimport {\n  ThemeProvider,\n  StyledEngineProvider,\n  createTheme,\n} from \"@mui/material/styles\";\n\nimport makeStyles from \"@mui/styles/makeStyles\";\n\nimport {\n  Box,\n  Button,\n  Link,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Typography,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n} from \"@mui/material\";\n\nconst theme = createTheme();\n\nconst SpeciesTable = ({\n  genus,\n  species,\n  detail,\n  id,\n  location,\n  ButtonStack,\n}) => {\n  const [selectSpecies, setSelectSpecies] = useState(0);\n\n  const handleOnChangeSelectSpecies = (e) => {\n    setSelectSpecies(e.target.value);\n  };\n  return (\n    <React.Fragment>\n      <ThemeProvider theme={theme}>\n        <StyledEngineProvider injectFirst>\n          <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\n            <Typography variant=\"h6\" component={`div`}>\n              Filter type\n            </Typography>\n            <Box sx={{ flexGrow: 0.02 }} />\n            <Box sx={{ width: 160 }}>\n              <FormControl fullWidth>\n                <InputLabel id=\"Type-Of-Species\" size=\"small\">\n                  Species\n                </InputLabel>\n                <Select\n                  label=\"Species\"\n                  labelId=\"Type-Of-Species\"\n                  onChange={(e) => handleOnChangeSelectSpecies(e)}\n                  value={selectSpecies}\n                  size=\"small\"\n                >\n                  {species &&\n                    species\n                      .filter((item) => item.genus_id == id)\n                      .map((val, index) => (\n                        <MenuItem key={index} value={val.id}>\n                          {val.name}\n                        </MenuItem>\n                      ))}\n                  <MenuItem value={0}>All</MenuItem>\n                </Select>\n              </FormControl>\n            </Box>\n          </Box>\n\n          <br />\n          <br />\n          <Box display=\"flex\" alignItems=\"center\" sx={{ marginBottom: \"10px\" }}>\n            <Typography variant=\"h5\">\n              Genus: {genus && genus.find((item) => item.id == id).name}\n            </Typography>\n            <Box sx={{ flexGrow: 1 }} />\n            <ButtonStack />\n          </Box>\n          <TableContainer\n            component={Paper}\n            sx={{\n              boxShadow: \"none\",\n              border: \"1px solid #B3B6B7\",\n            }}\n          >\n            <Table sx={{ minWidth: 650 }}>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Species</TableCell>\n                  <TableCell align=\"left\">Author</TableCell>\n                  <TableCell align=\"left\">Location</TableCell>\n                  <TableCell align=\"left\">Action</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {detail &&\n                  detail\n                    .filter((item) => item.genus_id === id)\n                    .filter((item) =>\n                      selectSpecies != 0\n                        ? item.species_id == selectSpecies\n                        : true\n                    )\n                    .map((val, index) => (\n                      <TableRow key={index}>\n                        <TableCell>\n                          <i>{`${val.genus} ${val.species}`}</i>\n                        </TableCell>\n                        <TableCell align=\"left\">{val.author}</TableCell>\n                        <TableCell align=\"left\">\n                          {location &&\n                            location.find((item) => item.detail_id == val.id)\n                              .locality}\n                        </TableCell>\n                        <TableCell align=\"left\">\n                          <Link\n                            href={\"detail/\" + val.id}\n                            sx={{\n                              cursor: \"pointer\",\n                            }}\n                            underline=\"hover\"\n                          >\n                            detail\n                          </Link>\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                {/* {species &&\n                  species\n                    .filter((item) => item.genus_id == id)\n                    .map((val, index) => (\n                      <TableRow key={index}>\n                        <TableCell>\n                          <i>\n                            {genus && genus.find((item) => item.id == id).name}{\" \"}\n                            {val.name}\n                          </i>\n                        </TableCell>\n                        <TableCell align=\"center\">\n                          {detail &&\n                            detail\n                              // .slice(0, 1)\n                              .find(\n                                (item) =>\n                                  item.species_id == val.id &&\n                                  item.genus_id == id\n                              ).author}\n                        </TableCell>\n\n                        <TableCell align=\"center\">\n                          <Link\n                            href={`detail/${val.id}`}\n                            sx={{\n                              cursor: \"pointer\",\n                            }}\n                          >\n                            detail\n                          </Link>\n                        </TableCell>\n                      </TableRow>\n                    ))} */}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </StyledEngineProvider>\n      </ThemeProvider>\n    </React.Fragment>\n  );\n};\n\nexport default SpeciesTable;\n","const SlideArrow = (props) => {\n  const { className, style, onClick, Comp } = props;\n  return (\n    <Comp\n      className={className}\n      style={{\n        ...style,\n        display: \"block\",\n        color: \"#000000\",\n        fontSize: \"2rem\",\n        borderRadius: \"50px\",\n        // backgroundColor: \"green\",\n      }}\n      onClick={onClick}\n    />\n  );\n};\n\nexport default SlideArrow;\n","import React from \"react\";\nimport {\n  ThemeProvider,\n  StyledEngineProvider,\n  createTheme,\n} from \"@mui/material/styles\";\n\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport {\n  Paper,\n  List,\n  ListItem,\n  ListItemText,\n  Typography,\n  Card,\n} from \"@mui/material\";\n\nconst theme = createTheme();\nconst useStyles = makeStyles(() => ({}));\n\nconst PaperPopup = (props) => {\n  const classes = useStyles();\n  const { positionName, province, family, genus, species } = props;\n  return (\n    <StyledEngineProvider injectFirst>\n      <ThemeProvider theme={theme}>\n        <List disablePadding>\n          <ListItem disablePadding>\n            <ListItemText\n              primary={\n                <Typography variant=\"body1\" component=\"span\">\n                  {<b>Position name: </b>}\n                  {positionName}\n                </Typography>\n              }\n            />\n          </ListItem>\n          <ListItem disablePadding>\n            <ListItemText\n              primary={\n                <Typography variant=\"body1\" component=\"span\">\n                  {<b>Province:</b>} {province}\n                </Typography>\n              }\n            />\n          </ListItem>\n          <ListItem disablePadding>\n            <ListItemText\n              primary={\n                <Typography variant=\"body1\" component=\"span\">\n                  {<b>Family:</b>} {family}\n                </Typography>\n              }\n            />\n          </ListItem>\n          <ListItem disablePadding>\n            <ListItemText\n              primary={\n                <Typography variant=\"body1\" component=\"span\">\n                  {<b>Genus:</b>} {<i>{genus}</i>}\n                </Typography>\n              }\n            />\n          </ListItem>\n          <ListItem disablePadding>\n            <ListItemText\n              primary={\n                <Typography variant=\"body1\" component=\"span\">\n                  {<b>Species:</b>}{\" \"}\n                  {\n                    <i>\n                      {genus} {species}\n                    </i>\n                  }\n                </Typography>\n              }\n            />\n          </ListItem>\n        </List>\n      </ThemeProvider>\n    </StyledEngineProvider>\n  );\n};\n\nexport default PaperPopup;\n","import {\n  Box,\n  Card,\n  Container,\n  Divider,\n  Grid,\n  IconButton,\n  Link,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Typography,\n  TextField,\n  Autocomplete,\n  Button,\n  List,\n  ListItem,\n  ListItemText,\n  Icon,\n  Modal,\n  Fade,\n  Dialog,\n  DialogContent,\n  Collapse,\n  Alert,\n} from \"@mui/material\";\nimport React, { useState, useEffect, Fragment } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport MapView from \"./shared/MapView\";\nimport {\n  ThemeProvider,\n  StyledEngineProvider,\n  createTheme,\n} from \"@mui/material/styles\";\n\nimport \"./index.css\";\n\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\n\nimport makeStyles from \"@mui/styles/makeStyles\";\n\nimport {\n  ArrowBackIosNew,\n  ArrowForwardIos,\n  KeyboardArrowRight,\n  Search,\n  KeyboardArrowLeft,\n  ChatBubbleOutline,\n} from \"@mui/icons-material\";\nimport { getAllFamily } from \"../../actions/family\";\nimport { getAllGenus } from \"../../actions/genus\";\nimport { getAllProvinces } from \"../../actions/province\";\nimport { getAllDistrict } from \"../../actions/district\";\nimport { getAllDetail } from \"../../actions/detail\";\nimport { getAllLocation } from \"../../actions/location\";\nimport { getAllAddress } from \"../../actions/address\";\nimport { getAllSpecies } from \"../../actions/species\";\nimport FamilyTable from \"./shared/FamilyTable\";\nimport GenusTable from \"./shared/GenusTable\";\nimport SpeciesTable from \"./shared/SpeciesTable\";\nimport Slider from \"react-slick\";\nimport SlideArrow from \"./shared/slideArrow\";\nimport PaperPopup from \"./shared/PaperPopup\";\nimport locationService from \"../../services/location.service\";\n\nconst theme = createTheme();\n\nconst useStyles = makeStyles(() => ({\n  divider: {\n    margin: theme.spacing(2, 0),\n  },\n  dialog: {\n    backgroundColor: \"rgba(78, 255, 61, 0.5)\",\n  },\n}));\n\nconst Home = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { result: dbfamily } = useSelector((state) => state.family);\n  const { result: dbgenus } = useSelector((state) => state.genus);\n  const { result: dbspecies } = useSelector((state) => state.species);\n  const { result: dbprovince } = useSelector((state) => state.province);\n  const { result: dbdistrict } = useSelector((state) => state.district);\n  const { result: dbdetail } = useSelector((state) => state.detail);\n  const { result: dblocation } = useSelector((state) => state.location);\n  const { result: dbaddress } = useSelector((state) => state.address);\n  const { user: currentUser } = useSelector((state) => state.auth);\n  const [province, setProvince] = useState(\"\");\n  const [district, setDistrict] = useState(\"\");\n  const [address, setAddress] = useState();\n  const [location, setLocation] = useState();\n  const [detail, setDetail] = useState([]);\n  const [family, setFamily] = useState([]);\n  const [genus, setGenus] = useState([]);\n  const [species, setSpecies] = useState([]);\n  const [map, setMap] = useState(false);\n  const [table, setTable] = useState();\n  const [show, setShow] = useState([\n    {\n      id: -1,\n    },\n  ]);\n  const [stack, setStack] = useState(1);\n  const [guid, setGuid] = useState(true);\n\n  useEffect(async () => {\n    dispatch(getAllFamily());\n    dispatch(getAllGenus());\n    dispatch(getAllSpecies());\n    dispatch(getAllDetail());\n    dispatch(getAllDistrict());\n    dispatch(getAllProvinces());\n    dispatch(getAllLocation());\n    dispatch(getAllAddress());\n    if (currentUser) {\n      console.log(`id = ${currentUser.username}`);\n    }\n\n    setAddress(dbaddress);\n  }, []);\n\n  const markAddress = (location_) => {\n    let address_ = [];\n    if (location_ && dbaddress) {\n      location_.map((item) => {\n        const tmp = dbaddress.filter((item2) => item2.location_id == item.id);\n        tmp.map((val) => {\n          address_.push(val);\n        });\n      });\n    }\n    return address_;\n  };\n\n  const mapMarker = (location_) => {\n    const address_ = markAddress(location_);\n\n    let data = [];\n    let skip = false;\n\n    let tmpFamily = [];\n    let tmpGenus = [];\n    let tmpSpecies = [];\n    let tmpDetail = [];\n\n    address_.map((item, index) => {\n      const loc_ = location_.find((val) => val.id === item.location_id);\n\n      const detail_ = dbdetail.find((val) => val.id == loc_.detail_id) || false;\n      if (\n        detail_ ||\n        tmpDetail\n          .map((e) => {\n            return e.id;\n          })\n          .indexOf(detail_.id) == -1\n      ) {\n        if (detail_) {\n          tmpDetail.push(detail_);\n          skip = true;\n        }\n      }\n\n      if (skip) {\n        const provinceName = dbprovince.find((val) => val.id == loc_.province);\n\n        const family_ = dbfamily.find((val) => val.id == detail_.family_id);\n\n        if (\n          tmpFamily\n            .map((e) => {\n              return e.id;\n            })\n            .indexOf(family_.id) == -1\n        ) {\n          tmpFamily.push(family_);\n        }\n\n        const genus_ = dbgenus.find((val) => val.id == detail_.genus_id);\n\n        if (\n          tmpGenus\n            .map((e) => {\n              return e.id;\n            })\n            .indexOf(genus_.id) == -1\n        ) {\n          tmpGenus.push(genus_);\n        }\n\n        const species_ = dbspecies.find((val) => val.id == detail_.species_id);\n        if (\n          tmpSpecies\n            .map((e) => {\n              return e.id;\n            })\n            .indexOf(species_.id) == -1\n        ) {\n          tmpSpecies.push(species_);\n        }\n\n        const mock = {\n          positionName: item.name,\n          latitude: item.latitude,\n          longitude: item.longitude,\n          province: provinceName.name_en,\n          family: family_.name,\n          genus: genus_.name,\n          species: species_.name,\n        };\n\n        data.push(mock);\n      }\n    });\n\n    const reduceAddress = () => {\n      let newAddress = [];\n\n      address_.map((item) => {\n        const lat = newAddress.map((e) => {\n          return e.latitude;\n        });\n        const long = newAddress.map((e) => {\n          return e.longitude;\n        });\n\n        if (\n          lat.indexOf(item.latitude) == -1 &&\n          long.indexOf(item.longitude) == -1\n        ) {\n          newAddress.push({\n            latitude: item.latitude,\n            longitude: item.longitude,\n          });\n        }\n      });\n\n      return newAddress;\n    };\n\n    const newData = reduceAddress();\n\n    const strucTmp = {\n      latitude: \"\",\n      longitude: \"\",\n      data: [],\n    };\n\n    for (let i = 0; i < newData.length; i++) {\n      const lat = newData[i].latitude;\n      const long = newData[i].longitude;\n\n      newData[i].data = data.filter(\n        (item) => item.latitude == lat && item.longitude == long\n      );\n    }\n\n    dispatch({ type: \"setDetail\", payload: tmpDetail });\n    setFamily(tmpFamily);\n    setGenus(tmpGenus);\n    setSpecies(tmpSpecies);\n    setDetail(tmpDetail);\n\n    return newData;\n    // setMap(newData);\n  };\n\n  const tableShow = (location_) => {\n    let detail_ = [];\n    if (location_ && dbdetail) {\n      location_.map((item) => {\n        const tmp = dbdetail.find((val) => val.id == item.detail_id);\n        if (\n          detail_\n            .map((e) => {\n              return e.id;\n            })\n            .indexOf(tmp.id) === -1\n        ) {\n          tmp.family = dbfamily.find((val) => val.id == tmp.family_id).name;\n          tmp.genus = dbgenus.find((val) => val.id == tmp.genus_id).name;\n          tmp.species = dbspecies.find((val) => val.id == tmp.species_id).name;\n          detail_.push(tmp);\n        }\n      });\n    }\n    return detail_;\n    console.log(\"data\", detail_);\n  };\n\n  const handleOnChangeAddress = () => {\n    // ONLY PROVICE\n    const map = [];\n    let location_ = \"\";\n    setGuid(false);\n\n    setShow([\n      {\n        id: -1,\n      },\n    ]);\n    setStack(1);\n\n    if (province && district) {\n      location_ = dblocation.filter(\n        (item) =>\n          item.province == province &&\n          item.district == district &&\n          dbdetail.find((val) => val.id == item.detail_id)\n      );\n    } else if (province) {\n      location_ = dblocation.filter(\n        (item) =>\n          item.province == province &&\n          dbdetail.find((val) => val.id == item.detail_id)\n      );\n    } else if (district) {\n      location_ = dblocation.filter(\n        (item) =>\n          item.district == district &&\n          dbdetail.find((val) => val.id == item.detail_id)\n      );\n    } else {\n      location_ = dblocation.filter((item) =>\n        dbdetail.find((val) => val.id == item.detail_id)\n      );\n    }\n    console.log(\"location_\", location_);\n    const data = mapMarker(location_);\n    setMap(data);\n    setLocation(location_);\n    const detail_ = tableShow(location_);\n  };\n\n  const ToNext = (type, id) => {\n    let tmpShow = [...show];\n    if (type == \"genus\") {\n      tmpShow[1] ? (tmpShow[1].id = id) : tmpShow.push({ id: id });\n    } else if (type == \"species\") {\n      tmpShow[2] ? (tmpShow[2].id = id) : tmpShow.push({ id: id });\n      console.log(\"genus id \", id);\n    }\n    // tmpShow.id = id;\n    console.log(\"tmp show\", tmpShow);\n    setStack(stack + 1);\n    setShow(tmpShow);\n  };\n\n  const handleOnClickBackward = () => {\n    setStack(stack - 1);\n  };\n\n  const handleOnClickForward = () => {\n    setStack(stack + 1);\n  };\n\n  const ButtonStack = () => {\n    return (\n      <Fragment>\n        <IconButton\n          sx={{ border: \"1px solid #808080\", borderRadius: \"4px\" }}\n          size=\"small\"\n          disabled={stack == 1 ? true : false}\n          onClick={() => handleOnClickBackward()}\n        >\n          <ArrowBackIosNew fontSize=\"small\" />\n        </IconButton>\n        <IconButton\n          sx={{\n            marginLeft: \"5px\",\n            border: \"1px solid #808080\",\n            borderRadius: \"4px\",\n          }}\n          size=\"small\"\n          disabled={stack >= show.length ? true : false}\n          onClick={() => handleOnClickForward()}\n        >\n          <ArrowForwardIos fontSize=\"small\" />\n        </IconButton>\n      </Fragment>\n    );\n  };\n\n  const settings = {\n    dots: true,\n    infinite: false,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    initialSlide: 1,\n    adaptiveHeight: false,\n    nextArrow: <SlideArrow Comp={KeyboardArrowRight} />,\n    prevArrow: <SlideArrow Comp={KeyboardArrowLeft} />,\n  };\n\n  return (\n    <StyledEngineProvider injectFirst>\n      <ThemeProvider theme={theme}>\n        <Box className={`page`}>\n          <Container sx={{ maxWidth: \"lg\" }}>\n            {/* <Dialog open={guid} onClose={() => setGuid(false)}>\n              <DialogContent className={classes.dialog}>\n                <Typography variant=\"h6\" component=\"div\">\n                  Click 'SHOW' to display spider species\n                </Typography>\n              </DialogContent>\n            </Dialog> */}\n            <Grid container spacing={4}>\n              <Grid item xs={12}>\n                <Collapse in={guid}>\n                  <Alert icon={false} sx={{ textAlign: \"center\" }} color=\"info\">\n                    Click 'Show' to display spider species (คลิก 'Show'\n                    เพื่อแสดงสปีชีส์แมงมุม)\n                  </Alert>\n                </Collapse>\n              </Grid>\n              <Grid\n                item\n                sx={{\n                  width: \"100%\",\n                  display: \"flex\",\n                  alignItem: \"center\",\n                }}\n              >\n                <Grid container spacing={2}>\n                  <Grid item>\n                    <Typography variant=\"h5\" sx={{ flexGrow: 0.05 }}>\n                      Filter location\n                    </Typography>\n                  </Grid>\n                  <Grid item>\n                    <Autocomplete\n                      disablePortal\n                      size=\"small\"\n                      onChange={(e, value) => {\n                        value ? setProvince(value.id) : setProvince(\"\");\n                      }}\n                      sx={{ width: 240 }}\n                      options={\n                        dbprovince\n                          ? dbprovince\n                              .sort((a, b) => (a.name_en > b.name_en ? 1 : -1))\n                              .map((item) => item)\n                          : [\"\"]\n                      }\n                      getOptionLabel={(options) => {\n                        return options.name_en + \" (\" + options.name_th + \")\";\n                      }}\n                      renderInput={(params) => (\n                        <TextField {...params} label=\"Province (All)\" />\n                      )}\n                    />\n                  </Grid>\n                  <Grid item>\n                    <Autocomplete\n                      disablePortal\n                      size=\"small\"\n                      onChange={(e, value) => {\n                        value ? setDistrict(value.id) : setDistrict(\"\");\n                      }}\n                      sx={{ width: 240 }}\n                      options={\n                        province\n                          ? dbdistrict\n                              .filter((item) => item.province_id == province)\n                              .sort((a, b) => (a.name_en > b.name_en ? 1 : -1))\n                              .map((item) => item)\n                          : dbdistrict\n                          ? dbdistrict\n                              .sort((a, b) => (a.name_en > b.name_en ? 1 : -1))\n                              .map((item) => item)\n                          : [\"\"]\n                      }\n                      getOptionLabel={(options) => {\n                        return options.name_en + \" (\" + options.name_th + \")\";\n                      }}\n                      renderInput={(params) => (\n                        <TextField {...params} label=\"district (All)\" />\n                      )}\n                    />\n                  </Grid>\n                  <Grid item>\n                    <Box sx={{ position: \"relative\" }}>\n                      <Button\n                        variant=\"outlined\"\n                        sx={{\n                          minWidth: \"100px\",\n                          height: \"40px\",\n                          textTransform: \"none\",\n                        }}\n                        onClick={() => handleOnChangeAddress()}\n                      >\n                        Show\n                      </Button>\n                    </Box>\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid\n                item\n                sx={{\n                  height: \"600px\",\n                  width: \"100%\",\n                  margin: \"20px\",\n                }}\n              >\n                <Box\n                  sx={{\n                    height: \"100%\",\n                    border: \"1px solid #040404\",\n                  }}\n                >\n                  <MapContainer\n                    className=\"map-view\"\n                    center={[13, 100]}\n                    zoom={5}\n                  >\n                    <TileLayer\n                      attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                      url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                    />\n                    {map\n                      ? map.map((val, index) => (\n                          <Marker\n                            key={index}\n                            position={[val.latitude, val.longitude]}\n                          >\n                            {val.data.length > 1 ? (\n                              <Popup style={{ width: \"480px\" }}>\n                                <Slider {...settings}>\n                                  {val.data.map((val2, index2) => (\n                                    <PaperPopup\n                                      key={index2}\n                                      positionName={val2.positionName}\n                                      province={val2.province}\n                                      family={val2.family}\n                                      genus={val2.genus}\n                                      species={val2.species}\n                                    />\n                                  ))}\n                                </Slider>\n                              </Popup>\n                            ) : (\n                              <Popup>\n                                <PaperPopup\n                                  positionName={val.data[0].positionName}\n                                  province={val.data[0].province}\n                                  family={val.data[0].family}\n                                  genus={val.data[0].genus}\n                                  species={val.data[0].species}\n                                />\n                              </Popup>\n                            )}\n                          </Marker>\n                        ))\n                      : \"\"}\n                  </MapContainer>\n                </Box>\n              </Grid>\n            </Grid>\n            <br />\n            <br />\n            <div>\n              {stack == 1 ? (\n                <div>\n                  <FamilyTable\n                    family={family}\n                    genus={genus}\n                    detail={detail}\n                    ToNext={ToNext}\n                    ButtonStack={ButtonStack}\n                  />\n                </div>\n              ) : stack == 2 ? (\n                <div>\n                  <GenusTable\n                    genus={genus}\n                    species={species}\n                    detail={detail}\n                    id={show[1].id}\n                    family={family}\n                    ToNext={ToNext}\n                    ButtonStack={ButtonStack}\n                  />\n                </div>\n              ) : (\n                stack == 3 && (\n                  <div>\n                    <SpeciesTable\n                      genus={genus}\n                      species={species}\n                      detail={detail}\n                      id={show[2].id}\n                      family={family}\n                      location={location}\n                      ButtonStack={ButtonStack}\n                    />\n                  </div>\n                )\n              )}\n            </div>\n            <Box sx={{ marginBottom: \"25vh\" }} />\n          </Container>\n        </Box>\n      </ThemeProvider>\n    </StyledEngineProvider>\n  );\n};\n\nexport default Home;\n","import { LOCATION_SUCCESS, LOCATION_FAILED, LOCATION_FETCHING } from \"./types\";\nimport locationService from \"../services/location.service\";\n\nexport const getAllLocation = () => async (dispatch) => {\n  try {\n    const res = await locationService.getAllLocation();\n    if (res) {\n      dispatch({\n        type: LOCATION_SUCCESS,\n        payload: res,\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: LOCATION_FAILED,\n    });\n  }\n};\n\nexport const getLocation = (id) => async (dispatch) => {\n  try {\n    const res = locationService.getLocation(id);\n    if (res) {\n      dispatch({\n        type: LOCATION_SUCCESS,\n        payload: res,\n      });\n    }\n  } catch (err) {\n    dispatch({ type: LOCATION_FAILED });\n  }\n};\n","import { ADDRESS_SUCCESS, ADDRESS_FAILED, ADDRESS_FETCHING } from \"./types\";\nimport addressService from \"../services/address.service\";\n\nexport const getAllAddress = () => async (dispatch) => {\n  try {\n    const res = await addressService.getAllAddress();\n    if (res) {\n      dispatch({\n        type: ADDRESS_SUCCESS,\n        payload: res,\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: ADDRESS_FAILED,\n    });\n  }\n};\n","import axios from \"axios\";\nimport join from \"url-join\";\n\nconst API_URL = join(process.env.REACT_APP_API_URL, \"auth\");\n\nconst login = (username, password) => {\n  return axios\n    .post(join(API_URL, \"signin\"), {\n      username,\n      password,\n    })\n    .then((response) => {\n      if (response.data.accessToken) {\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\n        console.log(`set local storage`);\n      }\n      console.log(`data ${response.data}`);\n      return response.data;\n    });\n};\n\nconst logout = () => {\n  localStorage.removeItem(\"user\");\n};\n\nexport default { login, logout };\n","import { CardHeader } from \"@mui/material\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  ThemeProvider,\n  StyledEngineProvider,\n  createTheme,\n} from \"@mui/material/styles\";\n\nimport makeStyles from \"@mui/styles/makeStyles\";\n\nimport React, { useState, useEffect } from \"react\";\nimport {\n  Card,\n  CardContent,\n  CardMedia,\n  Button,\n  Typography,\n  TextField,\n  OutlinedInput,\n  InputLabel,\n  InputAdornment,\n  IconButton,\n  FormControl,\n} from \"@mui/material\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Formik } from \"formik\";\nimport { red, green } from \"@mui/material/colors\";\n\nimport Visibility from \"@mui/icons-material/Visibility\";\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\nimport { login } from \"../../actions/auth\";\n\nconst theme = createTheme();\n\nconst useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  rootCard: {\n    width: 345,\n    marginTop: 100,\n  },\n  showPassword: {\n    position: \"absolute\",\n    justifyContent: \"center\",\n  },\n  submit: {\n    backgroundColor: \"#0090CB\",\n  },\n});\n\nconst validate = (values) => {\n  const errors = {};\n  if (!values.username) {\n    errors.username = \"Required\";\n  }\n\n  if (!values.password) {\n    errors.password = \"Required\";\n  }\n\n  return errors;\n};\n\nconst PasswordField = ({ isSubmitting, values, handleChange, error }) => {\n  const [showPassword, setShowPassword] = useState(false);\n  const handleClickShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n  return (\n    <FormControl\n      variant=\"outlined\"\n      style={{ width: \"100%\", marginTop: 8 }}\n      error={error}\n      fullWidth\n      margin=\"normal\"\n      size=\"small\"\n    >\n      <InputLabel htmlFor=\"outlined-adornment-password\">Password</InputLabel>\n      <OutlinedInput\n        disabled={isSubmitting}\n        label=\"Password\"\n        name=\"password\"\n        id=\"password\"\n        type={showPassword ? \"text\" : \"password\"}\n        value={values.password}\n        onChange={handleChange}\n        endAdornment={\n          <InputAdornment position=\"end\">\n            <IconButton\n              aria-label=\"toggle password visibility\"\n              onClick={handleClickShowPassword}\n              onMouseDown={handleMouseDownPassword}\n              edge=\"end\"\n              size=\"large\"\n            >\n              {values.showPassword ? <Visibility /> : <VisibilityOff />}\n            </IconButton>\n          </InputAdornment>\n        }\n      />\n    </FormControl>\n  );\n};\n\nconst LoginButton = withStyles(() => ({\n  root: {\n    marginTop: 10,\n    color: theme.palette.getContrastText(green[500]),\n    backgroundColor: green[500],\n    \"&:hover\": {\n      backgroundColor: green[700],\n    },\n  },\n}))(Button);\n\nconst Login = (props) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [serverMessage, setServerMessage] = useState(null);\n  const { user: currentUser } = useSelector((state) => state.auth);\n\n  useEffect(() => {\n    if (currentUser) {\n      props.history.push(\"/\");\n    }\n  }, []);\n\n  const handleMessage = (value) => {\n    const message = value;\n    setServerMessage(message);\n  };\n\n  const showForm = ({\n    values,\n    errors,\n    handleChange,\n    handleSubmit,\n    setFieldValue,\n    isSubmitting,\n    handleClickShowPassword,\n    handleMouseDownPassword,\n  }) => {\n    return (\n      <form onSubmit={handleSubmit}>\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          size=\"small\"\n          fullWidth\n          id=\"username\"\n          name=\"username\"\n          label=\"Username\"\n          onChange={handleChange}\n          value={values.username}\n          autoFocus\n          error={errors.username}\n          disabled={isSubmitting}\n        ></TextField>\n\n        {errors.username && (\n          <Typography style={{ color: \"#C82626\" }}>\n            {errors.username}\n          </Typography>\n        )}\n        <PasswordField\n          isSubmitting={isSubmitting}\n          values={values}\n          handleChange={handleChange}\n          name=\"password\"\n          error={errors.password}\n        ></PasswordField>\n        {errors.password && (\n          <Typography style={{ color: \"#C82626\" }}>\n            {errors.password}\n          </Typography>\n        )}\n        <LoginButton\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          disabled={isSubmitting}\n          className={classes.submit}\n        >\n          {\" Sign In\"}\n          {/* {isSubmitting ? \"Please wait...\" : \"Sign In\"} */}\n        </LoginButton>\n      </form>\n    );\n  };\n\n  return (\n    <StyledEngineProvider injectFirst>\n      <ThemeProvider theme={theme}>\n        <div className={classes.root}>\n          <Card className={classes.rootCard}>\n            {/* Insert Title */}\n            <CardHeader style={{ textAlign: \"center\" }} title=\"Login\" />\n            <CardContent>\n              {serverMessage && (\n                <Typography\n                  sx={{ fontSize: 14 }}\n                  style={{ color: \"#C82626\" }}\n                  gutterBottom\n                >\n                  {serverMessage}\n                </Typography>\n              )}\n              <Formik\n                onSubmit={(values, { setSubmitting, resetForm }) => {\n                  dispatch(login(values.username, values.password))\n                    .then(() => {\n                      handleMessage(false);\n                      props.history.push(\"/\");\n                      window.location.reload();\n\n                      // else {\n                      //   // props.history.push(\"/login\");\n                      //   // window.location.reload();\n                      //   resetForm();\n                      //   handleMessage(data);\n                      // }\n                    })\n                    .catch((error) => {\n                      resetForm();\n                      handleMessage(error);\n                    });\n                }}\n                initialValues={{\n                  username: \"\",\n                  password: \"\",\n                  showPassword: false,\n                }}\n                validate={validate}\n              >\n                {(props) => showForm(props)}\n              </Formik>\n            </CardContent>\n          </Card>\n        </div>\n      </ThemeProvider>\n    </StyledEngineProvider>\n  );\n};\n\nexport default Login;\n","import { LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT } from \"./types\";\n\nimport authService from \"../services/auth.service\";\n\nexport const login = (username, password) => (dispatch) => {\n  return authService.login(username, password).then(\n    (data) => {\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: { user: data },\n      });\n\n      return Promise.resolve;\n    },\n    (error) => {\n      const message =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.toString();\n\n      dispatch({\n        type: LOGIN_FAIL,\n      });\n\n      return Promise.reject(message);\n    }\n  );\n};\n\nexport const logout = () => (dispatch) => {\n  authService.logout();\n\n  dispatch({\n    type: LOGOUT,\n  });\n};\n","import { httpClient } from \"./httpClient\";\n\nconst postPaper = async (data) => {\n  console.log(\"services paper\", data);\n  const res = await httpClient\n    .post(\"paper/postPaper\", { data })\n    .then((response) => {\n      return response.data;\n    });\n  // console.log(\"family post res\", res);\n  return res;\n};\n\nconst updatePaper = async (data) => {\n  console.log(\"services paper\", data);\n  const res = await httpClient\n    .post(\"paper/updatePaper\", { data })\n    .then((response) => {\n      return response.data;\n    });\n  // console.log(\"family post res\", res);\n  return res;\n};\n\nconst getPaper = async (id) => {\n  const res = await httpClient.get(\"paper/\" + id).then((response) => {\n    return response.data;\n  });\n  return res;\n};\n\nconst getPaperAdmin = async (id) => {\n  const res = await httpClient.get(\"admin/paper/\" + id).then((response) => {\n    return response.data;\n  });\n  return res;\n};\n\nexport default {\n  postPaper,\n  getPaper,\n  updatePaper,\n  getPaperAdmin,\n};\n","import { httpClient } from \"./httpClient\";\n\nconst postImage = async (data) => {\n  console.log(\"services image\", data);\n  const res = await httpClient\n    .post(\"image/postImage\", data)\n    .then((response) => {\n      return response.data;\n    });\n  // console.log(\"family post res\", res);\n  return res;\n};\n\nconst updateImage = async (data) => {\n  const res = await httpClient\n    .post(\"image/updateImage\", { data })\n    .then((response) => {\n      return response.data;\n    });\n};\n\nconst getImage = async (id) => {\n  const res = await httpClient.get(\"image/\" + id).then((response) => {\n    return response.data;\n  });\n  return res;\n};\n\nconst getImageAdmin = async (id) => {\n  const res = await httpClient.get(\"admin/image/\" + id).then((response) => {\n    return response.data;\n  });\n  return res;\n};\n\nexport default {\n  postImage,\n  getImage,\n  getImageAdmin,\n  updateImage,\n};\n","import familyService from \"../../../services/family.service\";\nimport genusService from \"../../../services/genus.service\";\nimport speciesService from \"../../../services/species.service\";\nimport detailService from \"../../../services/detail.service\";\nimport locationService from \"../../../services/location.service\";\nimport addressService from \"../../../services/address.service\";\nimport paperService from \"../../../services/paper.service\";\nimport imageService from \"../../../services/image.service\";\n\nconst postFamilyFn = (name) => {\n  return familyService.postFamily(name).then((res) => {\n    return res.insertId;\n  });\n};\n\nconst postGenusFn = async (family_id, name) => {\n  return genusService.postGenus({ family_id, name }).then((res) => {\n    return res.insertId;\n  });\n};\n\nconst postSpeciesFn = async (genus_id, name) => {\n  return speciesService.postSpecies({ genus_id, name }).then((res) => {\n    return res.insertId;\n  });\n};\n\nconst postDetailFn = async (detail) => {\n  return detailService.postDetail(detail).then((res) => {\n    return res.insertId;\n  });\n};\n\nconst postLocationFn = async (location, detail_id) => {\n  location[\"detail_id\"] = detail_id;\n  return locationService.postLocation(location).then((res) => {\n    return res.insertId;\n  });\n};\n\nconst postAddressFn = async (address, locationId) => {\n  address[\"location_id\"] = locationId;\n  address.latitude = parseFloat(address.latitude);\n  address.longitude = parseFloat(address.longitude);\n  return addressService.postAddress(address).then((res) => {\n    return res.insertId;\n  });\n};\n\nconst postPaperFn = async (paper, detail_id) => {\n  paper.detail_id = detail_id;\n  console.log(\"check paper\", paper);\n  return paperService.postPaper(paper).then((res) => {\n    return res.insertId;\n  });\n};\n\nconst postImageFn = async (files) => {\n  return imageService.postImage(files).then((res) => {\n    return res.insertId;\n  });\n};\n\nconst updateDetailTypeFn = async (type) => {\n  return detailService.updateDetailType(type).then((res) => {\n    return type.id;\n  });\n};\n\nconst updateDetailFn = async (detail) => {\n  return detailService.updateDetail(detail).then((res) => {\n    return detail.id;\n  });\n};\n\nconst updateLocationFn = async (location) => {\n  return locationService.updateLocation(location).then((res) => {\n    return location.id;\n  });\n};\n\nconst updateAddressFn = async (address) => {\n  return addressService.updateAddress(address).then((res) => {\n    return address.id;\n  });\n};\n\nconst updatePaperFn = async (paper) => {\n  return paperService.updatePaper(paper).then((res) => {\n    return paper.id;\n  });\n};\n\nconst updateImage = async (image) => {\n  return imageService.updateImage(image).then((res) => {\n    return image.id;\n  });\n};\n\nexport {\n  postFamilyFn,\n  postGenusFn,\n  postSpeciesFn,\n  postDetailFn,\n  postLocationFn,\n  postAddressFn,\n  postPaperFn,\n  postImageFn,\n  updateDetailFn,\n  updateDetailTypeFn,\n  updateLocationFn,\n  updateAddressFn,\n  updatePaperFn,\n  updateImage,\n};\n","import * as Yup from \"yup\";\n\nconst validationSchema = Yup.object().shape({\n  data: Yup.object().shape({\n    family: Yup.string().required(\"Please specify\"),\n    genus: Yup.string().required(\"Please specify\"),\n    species: Yup.string().required(\"Please specify\"),\n    author: Yup.string().required(\"Please specify\"),\n    publish_year: Yup.string().required(\"Please specify\"),\n    country: Yup.string().required(\"Please specify\"),\n    country_other: Yup.string().required(\"Please specify\"),\n    altitude: Yup.string().required(\"Please specify\"),\n    method: Yup.string().required(\"Please specify\"),\n    habitat: Yup.string().required(\"Please specify\"),\n    microhabitat: Yup.string().required(\"Please specify\"),\n    designate: Yup.string().required(\"Please specify\"),\n    location: Yup.array(\n      Yup.object().shape({\n        province: Yup.number().required(\"Please specify\"),\n        district: Yup.number().required(\"Please specify\"),\n        locality: Yup.string().required(\"Please specify\"),\n        address: Yup.array(\n          Yup.object().shape({\n            name: Yup.string().required(\"Please specify\"),\n            latitude: Yup.number().required(\"Please specify\"),\n            longitude: Yup.number().required(\"Please specify\"),\n          })\n        ),\n      })\n    ),\n    paper: Yup.array(\n      Yup.object().shape({\n        name: Yup.string().required(\"Please specify\"),\n      })\n    ),\n  }),\n});\n\nexport default validationSchema;\n","import {\n  Container,\n  Paper,\n  Grid,\n  Typography,\n  Button,\n  Link,\n  Divider,\n  Autocomplete,\n  MenuItem,\n  IconButton,\n  Snackbar,\n  Collapse,\n  Alert,\n  Dialog,\n  DialogTitle,\n} from \"@mui/material\";\nimport {\n  ThemeProvider,\n  StyledEngineProvider,\n  createTheme,\n} from \"@mui/material/styles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { Field, Formik, Form, FieldArray, ErrorMessage } from \"formik\";\nimport React, {\n  useRef,\n  useState,\n  useEffect,\n  Fragment,\n  useCallback,\n} from \"react\";\nimport MapView from \"../shared/MapView\";\nimport { useDispatch } from \"react-redux\";\nimport \"./index.css\";\n\nimport { postFamily, getAllFamily } from \"../../../actions/family\";\nimport { getAllGenus, postGenus } from \"../../../actions/genus\";\nimport { getAllSpecies } from \"../../../actions/species\";\nimport { useSelector } from \"react-redux\";\nimport { Select, SimpleFileUpload, Switch, TextField } from \"formik-mui\";\nimport { Box, margin } from \"@mui/system\";\nimport { useDropzone } from \"react-dropzone\";\n\nimport { SnackbarProvider, useSnackbar } from \"notistack\";\n\nimport {\n  postFamilyFn,\n  postGenusFn,\n  postSpeciesFn,\n  postDetailFn,\n  postLocationFn,\n  postAddressFn,\n  postPaperFn,\n  postImageFn,\n} from \"./insertFn\";\nimport validationSchema from \"./validate\";\nimport {\n  Close,\n  WindowSharp,\n  AddAPhoto,\n  Backspace,\n  Delete,\n  DeleteOutline,\n} from \"@mui/icons-material\";\nimport { getAllProvinces } from \"../../../actions/province\";\nimport { getAllDistrict } from \"../../../actions/district\";\n\nconst theme = createTheme();\n\nconst useStyles = makeStyles(() => ({\n  paper: {\n    padding: \"10px\",\n    boxShadow: \"none\",\n    border: \"1px solid #B3B6B7\",\n  },\n  divider: {\n    marginTop: \"10px\",\n  },\n  placeholder: {\n    width: \"100%\",\n    height: \"100%\",\n    display: \"flex\",\n    address: \"absolute\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    color: \"rgb(99, 115, 129)\",\n    backgroundColor: \"rgb(244, 246, 248)\",\n    transition: \"opacity 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\n  },\n  placeholderImageProfile: {\n    color: \"rgb(255, 255, 255)\",\n    backgroundColor: \"rgba(22, 28, 36, .50)\",\n  },\n  placeholderLabel: {\n    color: \"rgb(255, 255, 255)\",\n  },\n  form: {\n    // \"& div\": {\n    //   position: \"absolute\",\n    // },\n  },\n}));\n\nconst InsertForm = () => {\n  const [years, setYears] = useState([]);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const formRef = useRef();\n  const [success, setSuccess] = useState(false);\n  const [submit, setSubmit] = useState(false);\n  const { result: dbFamily } = useSelector((state) => state.family);\n  const { result: dbGenus } = useSelector((state) => state.genus);\n  const { result: dbSpecies } = useSelector((state) => state.species);\n  const { result: dbProvince } = useSelector((state) => state.province);\n  const { result: dbDistrict } = useSelector((state) => state.district);\n  const [status, setStatus] = useState({\n    showFamily: true,\n    showGenus: true,\n    showSpecies: true,\n  });\n  const [data] = useState({\n    family: \"\",\n    genus: \"\",\n    species: \"\",\n    author: \"\",\n    publish_year: \"\",\n    country: \"Thailand\",\n    country_other: \"\",\n    altitude: \"\",\n    method: \"\",\n    habitat: \"\",\n    microhabitat: \"\",\n    designate: \"\",\n    location: [\n      {\n        province: \"\",\n        district: \"\",\n        locality: \"\",\n        address: [\n          {\n            name: \"\",\n            latitude: \"\",\n            longitude: \"\",\n          },\n        ],\n      },\n    ],\n    paper: [\n      {\n        name: \"\",\n      },\n    ],\n  });\n\n  const [point, setPoint] = useState([\n    {\n      name: \"\",\n      latitude: \"\",\n      longitude: \"\",\n    },\n  ]);\n  const [files, setFiles] = useState([]);\n  const [uploads, setUploads] = useState();\n\n  useEffect(() => {\n    dispatch(getAllFamily());\n    dispatch(getAllGenus());\n    dispatch(getAllSpecies());\n\n    dispatch(getAllProvinces());\n    dispatch(getAllDistrict());\n\n    const createListYear = () => {\n      const date = new Date();\n      const tmpYesrs = [];\n      let nowYear = date.getFullYear();\n      console.log(`now year : ${nowYear}`);\n      for (let i = nowYear; i > nowYear - 100; i--) {\n        tmpYesrs.push(i);\n      }\n      setYears([...tmpYesrs]);\n    };\n\n    createListYear();\n  }, []);\n\n  // onDrop of react Drop zone\n  const onDrop = useCallback((acceptedFiles) => {\n    // Do something with the files\n    let formData = new FormData();\n    acceptedFiles.map((file) => formData.append(\"image\", file));\n    setFiles(\n      acceptedFiles.map((file) =>\n        Object.assign(file, { preview: URL.createObjectURL(file) })\n      )\n    );\n    setUploads(acceptedFiles);\n  }, []);\n\n  // set react Drop zone\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    accept: \"image/jpeg, image/png\",\n    onDrop,\n    maxFiles: 20,\n  });\n\n  // preview image input\n  const thumbs = files.map((file) => (\n    <img key={file.name} src={file.preview} className={classes.uploadImage} />\n  ));\n\n  // form submit\n  const handleSubmit = async (values) => {\n    const data_ = values;\n\n    // check type old type spider\n    const checkFamily = dbFamily.find(\n      (item) => item.id == Number(values.family) || item.name == values.family\n    );\n\n    const checkGenus = dbGenus.find(\n      (item) => item.id == Number(values.genus) || item.name == values.genus\n    );\n\n    const checkSpecies = dbSpecies.find(\n      (item) => item.id == Number(values.species) || item.name == values.species\n    );\n\n    checkFamily\n      ? (data_.family = checkFamily.id)\n      : (data_.family = await postFamilyFn(data_.family));\n\n    checkGenus\n      ? (data_.genus = checkGenus.id)\n      : (data_.genus = await postGenusFn(data_.family, data_.genus));\n\n    checkSpecies\n      ? (data_.species = checkSpecies.id)\n      : (data_.species = await postSpeciesFn(data_.genus, data_.species));\n\n    const detail_ = {\n      family_id: data_.family,\n      genus_id: data_.genus,\n      species_id: data_.species,\n      author: data_.author,\n      publish_year: data_.publish_year,\n      country: data_.country,\n      country_other: data_.country_other,\n      altitude: data_.altitude,\n      method: data_.method,\n      habitat: data_.habitat,\n      microhabitat: data_.microhabitat,\n      designate: data_.designate,\n    };\n\n    const detail_id = await postDetailFn(detail_);\n\n    const location = data_.location;\n\n    console.log(\"location \", location);\n    location.map(async (item) => {\n      const address = item.address;\n      delete item.address;\n      const locationId = await postLocationFn(item, detail_id);\n      address.map(async (item2) => {\n        const AddressId = await postAddressFn(item2, locationId);\n      });\n    });\n\n    const paper = data_.paper;\n\n    paper.map(async (item) => {\n      const paperId = await postPaperFn(item, detail_id);\n    });\n\n    uploads &&\n      uploads.map((item) => {\n        const formData = new FormData();\n        formData.append(\"image\", item);\n        formData.append(\"detail_id\", detail_id);\n\n        const res = postImageFn(formData);\n      });\n\n    return detail_id;\n  };\n\n  const onKeyDown = (keyEvent) => {\n    if ((keyEvent.charCode || keyEvent.keyCode) === 13) {\n      keyEvent.preventDefault();\n    }\n  };\n\n  // render form component\n  return (\n    <StyledEngineProvider injectFirst>\n      <ThemeProvider theme={theme}>\n        <div className={`page`}>\n          <Container maxWidth=\"lg\">\n            <Paper className={classes.paper}>\n              <Collapse in={success}>\n                <Alert\n                  action={\n                    <IconButton\n                      aria-label=\"close\"\n                      color=\"inherit\"\n                      size=\"small\"\n                      onClick={() => {\n                        setSuccess(false);\n                        window.location.reload();\n                      }}\n                    >\n                      <Close fontSize=\"inherit\" />\n                    </IconButton>\n                  }\n                >\n                  success !\n                </Alert>\n              </Collapse>\n              <Formik\n                initialValues={{ data, status, submit }}\n                enableReinitialize\n                innerRef={formRef}\n                validationSchema={validationSchema}\n                onSubmit={(values, setSubmitting) => {\n                  {\n                    console.log(\"submit\");\n                  }\n                  try {\n                    {\n                      console.log(\"submit\");\n                    }\n                    handleSubmit(values.data).then((detail_id) => {\n                      setSuccess(true);\n                      window.scrollTo(0, 0);\n                      // setTimeout(() => {\n                      //   window.location.reload();\n                      // }, 1000);\n                    });\n                  } catch (error) {\n                    console.log(error);\n                  }\n                }}\n              >\n                {({\n                  values,\n                  errors,\n                  isSubmitting,\n                  touched,\n                  handleBlur,\n                  setFieldValue,\n                }) => (\n                  <Form\n                    autoComplete=\"off\"\n                    className={classes.form}\n                    onKeyDown={onKeyDown}\n                  >\n                    <Grid container style={{ padding: \"20px\" }} spacing={2}>\n                      <Grid item xs={6}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={12}>\n                            <Typography variant=\"h5\" gutterBottom>\n                              Family action\n                            </Typography>\n                          </Grid>\n                          <Grid item xs={4} className={`family`}>\n                            <Box style={{ display: \"flex\" }}>\n                              <Typography variant=\"subtitle1\">\n                                Family\n                              </Typography>\n                              <div style={{ flexGrow: 1 }} />\n                              <Field\n                                component={Switch}\n                                type=\"checkbox\"\n                                name=\"status.showFamily\"\n                              />\n                            </Box>\n                            {values.status.showFamily ? (\n                              <Field\n                                component={Select}\n                                formControl={{\n                                  sx: { width: \"100%\", size: \"small\" },\n                                }}\n                                size=\"small\"\n                                name=\"data.family\"\n                              >\n                                {dbFamily &&\n                                  dbFamily.map((val, index) => (\n                                    <MenuItem key={index} value={val.id}>\n                                      {val.name}\n                                    </MenuItem>\n                                  ))}\n                              </Field>\n                            ) : (\n                              <Field\n                                component={TextField}\n                                name=\"data.family\"\n                                size=\"small\"\n                              ></Field>\n                            )}\n                          </Grid>\n                          <Grid item xs={4} className={`genus`}>\n                            <Box style={{ display: \"flex\" }}>\n                              <Typography variant=\"subtitle1\">Genus</Typography>\n                              <div style={{ flexGrow: 1 }} />\n                              <Field\n                                component={Switch}\n                                type=\"checkbox\"\n                                name=\"status.showGenus\"\n                              />\n                            </Box>\n                            {values.status.showGenus ? (\n                              <Field\n                                component={Select}\n                                formControl={{\n                                  sx: { width: \"100%\", size: \"small\" },\n                                }}\n                                size=\"small\"\n                                id=\"data.genus\"\n                                name=\"data.genus\"\n                              >\n                                {dbGenus &&\n                                  dbGenus\n                                    .filter(\n                                      (item) =>\n                                        item.family_id ===\n                                        Number(values.data.family)\n                                    )\n                                    .map((val, index) => (\n                                      <MenuItem key={index} value={val.id}>\n                                        {val.name}\n                                      </MenuItem>\n                                    ))}\n                              </Field>\n                            ) : (\n                              <Field\n                                component={TextField}\n                                name=\"data.genus\"\n                                size=\"small\"\n                              ></Field>\n                            )}\n                          </Grid>\n                          <Grid item xs={4} className={`species`}>\n                            <Box style={{ display: \"flex\" }}>\n                              <Typography variant=\"subtitle1\">\n                                Species\n                              </Typography>\n                              <div style={{ flexGrow: 1 }} />\n                              <Field\n                                component={Switch}\n                                type=\"checkbox\"\n                                name=\"status.showSpecies\"\n                              />\n                            </Box>\n                            {values.status.showSpecies ? (\n                              <Field\n                                component={Select}\n                                formControl={{\n                                  sx: { width: \"100%\", size: \"small\" },\n                                }}\n                                size=\"small\"\n                                id=\"data.species\"\n                                name=\"data.species\"\n                              >\n                                {dbSpecies &&\n                                  dbSpecies\n                                    .filter(\n                                      (item) =>\n                                        item.genus_id ===\n                                        Number(values.data.genus)\n                                    )\n                                    .map((val, index) => (\n                                      <MenuItem key={index} value={val.id}>\n                                        {val.name}\n                                      </MenuItem>\n                                    ))}\n                              </Field>\n                            ) : (\n                              <Field\n                                component={TextField}\n                                name=\"data.species\"\n                                size=\"small\"\n                              ></Field>\n                            )}\n                          </Grid>\n                          <Grid item xs={12}>\n                            <Divider />\n                          </Grid>\n                          <Grid item xs={12}>\n                            <Typography variant=\"h5\" gutterBottom>\n                              Detail\n                            </Typography>\n                          </Grid>\n                          <Grid item xs={9} className={`author`}>\n                            <Typography varaint=\"subtitle1\">Author</Typography>\n                            <Field\n                              name=\"data.author\"\n                              component={TextField}\n                              fullWidth\n                              size=\"small\"\n                            />\n                          </Grid>\n                          <Grid item xs={3} className={`year`}>\n                            <Typography varaint=\"subtitle1\">\n                              publish year\n                            </Typography>\n                            <Field\n                              name=\"data.publish_year\"\n                              component={Select}\n                              formControl={{\n                                sx: { width: \"100%\", size: \"small\" },\n                              }}\n                              size=\"small\"\n                              MenuProps={{\n                                PaperProps: { sx: { maxHeight: 300 } },\n                              }}\n                            >\n                              {years &&\n                                years.map((val, index) => (\n                                  <MenuItem key={index} value={val}>\n                                    {val}\n                                  </MenuItem>\n                                ))}\n                            </Field>\n                          </Grid>\n                          <Grid item xs={3}>\n                            <Typography variant=\"subtitle1\">Country</Typography>\n                            <Field\n                              name=\"data.country\"\n                              component={TextField}\n                              disabled\n                              fullWidth\n                              value={values.data.country}\n                              size=\"small\"\n                            />\n                          </Grid>\n                          <Grid item xs={9}>\n                            <Typography variant=\"subtitle1\">\n                              Other country\n                            </Typography>\n                            <Field\n                              name=\"data.country_other\"\n                              component={TextField}\n                              fullWidth\n                              size=\"small\"\n                              placeholder=\"if any\"\n                            />\n                          </Grid>\n                        </Grid>\n                        {/* grid for create first half layout */}\n\n                        {/*grid for segment MapView */}\n                      </Grid>\n                      <Grid item xs={6}>\n                        <Typography variant=\"subtitle1\" gutterBottom>\n                          Map monitor\n                        </Typography>\n                        <div className=\"map\" style={{ height: \"100%\" }}>\n                          <MapView listEx={values.data.location} />\n                        </div>\n                      </Grid>\n                      {/* End map view */}\n                      <Grid item xs={12}>\n                        <Typography variant=\"subtitle1\">Altitude</Typography>\n                        <Field\n                          name=\"data.altitude\"\n                          component={TextField}\n                          fullWidth\n                          multiline\n                          rows={2}\n                          size=\"small\"\n                        ></Field>\n                      </Grid>\n                      <Grid item xs={12}>\n                        <Typography variant=\"subtitle1\">Method</Typography>\n                        <Field\n                          name=\"data.method\"\n                          component={TextField}\n                          fullWidth\n                          multiline\n                          rows={2}\n                          size=\"small\"\n                        ></Field>\n                      </Grid>\n                      <Grid item xs={12}>\n                        <Typography variant=\"subtitle1\">habitat</Typography>\n                        <Field\n                          name=\"data.habitat\"\n                          component={TextField}\n                          fullWidth\n                          multiline\n                          rows={2}\n                          size=\"small\"\n                        ></Field>\n                      </Grid>\n                      <Grid item xs={12}>\n                        <Typography variant=\"subtitle1\">\n                          microhabitat\n                        </Typography>\n                        <Field\n                          name=\"data.microhabitat\"\n                          component={TextField}\n                          fullWidth\n                          multiline\n                          rows={2}\n                          size=\"small\"\n                        ></Field>\n                      </Grid>\n                      <Grid item xs={12}>\n                        <Typography variant=\"subtitle1\">Designate</Typography>\n                        <Field\n                          name=\"data.designate\"\n                          component={TextField}\n                          fullWidth\n                          multiline\n                          rows={2}\n                          size=\"small\"\n                        ></Field>\n                      </Grid>\n                      <Grid item xs={12}>\n                        <Divider style={{ marginTop: \"1rem\" }} />\n                      </Grid>\n                      {/* End Detail */}\n                      <Grid item xs={12}>\n                        <FieldArray name=\"data.location\">\n                          {({ push, pop, remove }) => (\n                            <Fragment>\n                              <Grid container spacing={2}>\n                                <Grid item xs={12} style={{ display: \"flex\" }}>\n                                  <Button\n                                    variant=\"outlined\"\n                                    size=\"small\"\n                                    color=\"success\"\n                                    onClick={() =>\n                                      push({\n                                        province: \"\",\n                                        district: \"\",\n                                        locality: \"\",\n                                        address: [\n                                          {\n                                            name: \"\",\n                                            latitude: \"\",\n                                            longitude: \"\",\n                                          },\n                                        ],\n                                      })\n                                    }\n                                  >\n                                    Add location\n                                  </Button>\n                                  <Grid item xs={12}></Grid>\n                                </Grid>\n                                {values.data.location &&\n                                  values.data.location.map((val, index) => (\n                                    <Grid item xs={12} key={index}>\n                                      <Paper\n                                        sx={{\n                                          padding: \"10px\",\n                                          paddingBottom: \"15px\",\n                                        }}\n                                      >\n                                        <Grid container spacing={2}>\n                                          <Grid item xs={12}>\n                                            <Typography varaint=\"subtitle1\">\n                                              Location {index + 1}.\n                                            </Typography>\n                                          </Grid>\n                                          <Grid\n                                            item\n                                            xs={3}\n                                            className={`province`}\n                                          >\n                                            <Typography varaint=\"subtitle1\">\n                                              Province\n                                            </Typography>\n                                            {/* <Field\n                                              name={`data.location[${index}].province`}\n                                              component={TextField}\n                                              size=\"small\"\n                                              fullWidth\n                                            /> */}\n                                            <Field\n                                              component={Select}\n                                              formControl={{\n                                                sx: {\n                                                  width: \"100%\",\n                                                  size: \"small\",\n                                                },\n                                              }}\n                                              MenuProps={{\n                                                PaperProps: {\n                                                  sx: { maxHeight: 500 },\n                                                },\n                                              }}\n                                              size=\"small\"\n                                              id={`data.location[${index}].province`}\n                                              name={`data.location[${index}].province`}\n                                            >\n                                              {dbProvince &&\n                                                dbProvince\n                                                  .sort((a, b) =>\n                                                    a.name_en > b.name_en\n                                                      ? 1\n                                                      : -1\n                                                  )\n                                                  .map((val, index) => (\n                                                    <MenuItem\n                                                      key={index}\n                                                      value={val.id}\n                                                    >\n                                                      {val.name_en}\n                                                    </MenuItem>\n                                                  ))}\n                                            </Field>\n                                          </Grid>\n                                          <Grid\n                                            item\n                                            xs={3}\n                                            className={`district`}\n                                          >\n                                            <Typography varaint=\"subtitle1\">\n                                              District\n                                            </Typography>\n                                            {/* <Field\n                                              name={`data.location[${index}].district`}\n                                              component={TextField}\n                                              size=\"small\"\n                                              fullWidth\n                                            /> */}\n                                            <Field\n                                              component={Select}\n                                              formControl={{\n                                                sx: {\n                                                  width: \"100%\",\n                                                  size: \"small\",\n                                                },\n                                              }}\n                                              MenuProps={{\n                                                PaperProps: {\n                                                  sx: { maxHeight: 500 },\n                                                },\n                                              }}\n                                              size=\"small\"\n                                              id={`data.location[${index}].district`}\n                                              name={`data.location[${index}].district`}\n                                            >\n                                              {dbDistrict &&\n                                                dbDistrict\n                                                  .filter(\n                                                    (item) =>\n                                                      item.province_id ==\n                                                      values.data.location[\n                                                        index\n                                                      ].province\n                                                  )\n                                                  .sort((a, b) =>\n                                                    a.name_en > b.name_en\n                                                      ? 1\n                                                      : -1\n                                                  )\n                                                  .map((val, index) => (\n                                                    <MenuItem\n                                                      key={index}\n                                                      value={val.id}\n                                                    >\n                                                      {val.name_en}\n                                                    </MenuItem>\n                                                  ))}\n                                            </Field>\n                                          </Grid>\n                                          <Grid\n                                            item\n                                            xs={6}\n                                            className={`locality`}\n                                          >\n                                            <Typography varaint=\"subtitle1\">\n                                              Locality\n                                            </Typography>\n                                            <Box style={{ display: \"flex\" }}>\n                                              <Field\n                                                name={`data.location[${index}].locality`}\n                                                component={TextField}\n                                                size=\"small\"\n                                                fullWidth\n                                              />\n                                              <div style={{ flexGrow: 1 }} />\n                                              <IconButton\n                                                color=\"error\"\n                                                sx={{ marginLeft: \"1rem\" }}\n                                                onClick={() => {\n                                                  values.data.location.length >\n                                                    1 && remove(index);\n                                                }}\n                                              >\n                                                <DeleteOutline />\n                                              </IconButton>\n                                            </Box>\n                                          </Grid>\n                                          <Grid item xs={12}>\n                                            <FieldArray\n                                              name={`data.location[${index}].address`}\n                                            >\n                                              {({ push, remove }) => (\n                                                <Grid container spacing={2}>\n                                                  <Grid\n                                                    item\n                                                    xs={12}\n                                                    style={{\n                                                      display: \"flex\",\n                                                    }}\n                                                  >\n                                                    <Typography\n                                                      variant=\"subtitle1\"\n                                                      gutterBottom\n                                                    >\n                                                      address\n                                                    </Typography>\n                                                    <Button\n                                                      sx={{\n                                                        marginLeft: \"2rem\",\n                                                      }}\n                                                      color=\"success\"\n                                                      variant=\"outlined\"\n                                                      size=\"small\"\n                                                      onClick={() => {\n                                                        push({\n                                                          name: \"\",\n                                                          latitude: \"\",\n                                                          longitude: \"\",\n                                                        });\n                                                      }}\n                                                    >\n                                                      Add\n                                                    </Button>\n                                                  </Grid>\n                                                  {values.data.location[index]\n                                                    .address &&\n                                                    values.data.location[\n                                                      index\n                                                    ].address.map(\n                                                      (val, subIndex) => (\n                                                        <Grid\n                                                          item\n                                                          xs={12}\n                                                          key={subIndex}\n                                                        >\n                                                          <Grid\n                                                            container\n                                                            spacing={2}\n                                                            alignItems=\"flex-end\"\n                                                          >\n                                                            <Grid\n                                                              item\n                                                              xs={4}\n                                                              sx={{\n                                                                display: \"flex\",\n                                                                alignItems:\n                                                                  \"flex-end\",\n                                                              }}\n                                                            >\n                                                              <Typography\n                                                                varaint=\"subtitle1\"\n                                                                gutterBottom\n                                                                sx={{\n                                                                  marginRight:\n                                                                    \"1rem\",\n                                                                }}\n                                                              >\n                                                                {subIndex + 1}.\n                                                              </Typography>\n                                                              <Box\n                                                                sx={{\n                                                                  flexGrow: 1,\n                                                                }}\n                                                              />\n                                                              <Field\n                                                                name={`data.location[${index}].address[${subIndex}].name`}\n                                                                component={\n                                                                  TextField\n                                                                }\n                                                                size=\"small\"\n                                                                fullWidth\n                                                                placeholder=\"Name\"\n                                                              />\n                                                            </Grid>\n                                                            <Grid item xs={3}>\n                                                              <Field\n                                                                name={`data.location[${index}].address[${subIndex}].latitude`}\n                                                                component={\n                                                                  TextField\n                                                                }\n                                                                size=\"small\"\n                                                                fullWidth\n                                                                placeholder=\"Latitude\"\n                                                              />\n                                                            </Grid>\n                                                            <Grid item xs={3}>\n                                                              <Field\n                                                                name={`data.location[${index}].address[${subIndex}].longitude`}\n                                                                component={\n                                                                  TextField\n                                                                }\n                                                                size=\"small\"\n                                                                fullWidth\n                                                                placeholder=\"Longitude\"\n                                                              />\n                                                            </Grid>\n                                                            <Grid item xs={1}>\n                                                              <IconButton\n                                                                color=\"error\"\n                                                                onClick={() => {\n                                                                  values.data\n                                                                    .location[\n                                                                    index\n                                                                  ].address\n                                                                    .length >\n                                                                    1 &&\n                                                                    remove(\n                                                                      subIndex\n                                                                    );\n                                                                }}\n                                                              >\n                                                                <Backspace />\n                                                              </IconButton>\n                                                            </Grid>\n                                                          </Grid>\n                                                        </Grid>\n                                                      )\n                                                    )}\n                                                </Grid>\n                                              )}\n                                            </FieldArray>\n                                          </Grid>\n                                        </Grid>\n                                      </Paper>\n                                      <Grid item xs={12}>\n                                        <Divider\n                                          style={{ marginTop: \"1rem\" }}\n                                        />\n                                      </Grid>\n                                    </Grid>\n                                  ))}\n                              </Grid>\n                            </Fragment>\n                          )}\n                        </FieldArray>\n                      </Grid>\n                      <Grid item xs={12}>\n                        <FieldArray name=\"data.paper\">\n                          {({ push, remove }) => (\n                            <Grid container spacing={2}>\n                              <Grid item xs={12} sx={{ display: \"flex\" }}>\n                                <Typography variant=\"subtitle1\">\n                                  Paper Ref\n                                </Typography>\n                                <Button\n                                  sx={{\n                                    marginLeft: \"2rem\",\n                                  }}\n                                  color=\"success\"\n                                  variant=\"outlined\"\n                                  size=\"small\"\n                                  onClick={() =>\n                                    push({\n                                      name: \"\",\n                                    })\n                                  }\n                                >\n                                  Add\n                                </Button>\n                              </Grid>\n                              {values.data.paper &&\n                                values.data.paper.map((val, index) => (\n                                  <Grid\n                                    item\n                                    key={index}\n                                    xs={4}\n                                    sx={{\n                                      display: \"flex\",\n                                      alignItems: \"flex-end\",\n                                    }}\n                                  >\n                                    <Typography\n                                      varaint=\"subtitle1\"\n                                      gutterBottom\n                                      sx={{ marginRight: \"1rem\" }}\n                                    >\n                                      {index + 1}.\n                                    </Typography>\n                                    <Field\n                                      name={`data.paper[${index}].name`}\n                                      component={TextField}\n                                      size=\"small\"\n                                      fullWidth\n                                      placeholder=\"Paper name\"\n                                    />\n                                    <IconButton\n                                      color=\"error\"\n                                      onClick={() => {\n                                        values.data.paper.length > 1 &&\n                                          remove(index);\n                                      }}\n                                    >\n                                      <Backspace />\n                                    </IconButton>\n                                  </Grid>\n                                ))}\n                            </Grid>\n                          )}\n                        </FieldArray>\n                      </Grid>\n                      <Grid item xs={12}>\n                        <Divider style={{ marginTop: \"1rem\" }} />\n                      </Grid>\n                      <Grid item xs={12}>\n                        <Typography variant=\"subtitle1\" gutterBottom>\n                          Upload image\n                        </Typography>\n                      </Grid>\n                      <Grid item xs={12}>\n                        <Box sx={{ margin: \"1rem\" }}>\n                          <Box {...getRootProps({ className: \"dropzone\" })}>\n                            <Box className=\"inner-dropzone\">\n                              <input {...getInputProps()} />\n                              <Fragment>{thumbs}</Fragment>\n                              <div\n                                className={`placeholder ${\n                                  classes.placeholder\n                                } ${\n                                  files.length != 0 &&\n                                  classes.placeholderImageProfile\n                                }`}\n                              >\n                                <AddAPhoto />\n                                <Typography\n                                  style={{\n                                    marginTop: 8,\n                                    backgroundColor: \"transparent\",\n                                  }}\n                                  className={`${\n                                    files != 0 && classes.placeholderLabel\n                                  }`}\n                                  variant=\"body2\"\n                                >\n                                  Upload Photo\n                                </Typography>\n                              </div>\n                            </Box>\n                          </Box>\n                        </Box>\n                        <Button\n                          variant=\"text\"\n                          size=\"small\"\n                          color=\"error\"\n                          onClick={() => setFiles([])}\n                        >\n                          Clear\n                        </Button>\n                      </Grid>\n\n                      {/* main grid */}\n                      <Grid item xs={12}>\n                        <Divider style={{ marginTop: \"1rem\" }} />\n                      </Grid>\n                      <Grid item xs={12}>\n                        <Button\n                          type=\"submit\"\n                          variant=\"outlined\"\n                          color=\"primary\"\n                        >\n                          Submit\n                        </Button>\n                      </Grid>\n                    </Grid>\n\n                    <Box style={{ display: \"flex\" }}>\n                      <pre>{JSON.stringify({ values, errors }, null, 4)}</pre>\n                    </Box>\n                  </Form>\n                )}\n              </Formik>\n            </Paper>\n          </Container>\n        </div>\n      </ThemeProvider>\n    </StyledEngineProvider>\n  );\n};\n\nexport default InsertForm;\n","import React, { useState, useEffect, Fragment } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  ThemeProvider,\n  StyledEngineProvider,\n  createTheme,\n} from \"@mui/material/styles\";\n\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport {\n  Container,\n  Divider,\n  Paper,\n  Typography,\n  Grid,\n  List,\n  ListItem,\n  ListItemText,\n} from \"@mui/material\";\nimport { getAllSpecies } from \"../../../actions/species\";\nimport detailService from \"../../../services/detail.service\";\nimport { getDetail } from \"../../../actions/detail\";\nimport { getLocation } from \"../../../actions/location\";\nimport { getImage } from \"../../../actions/image\";\nimport { getPaper } from \"../../../actions/paper\";\nimport { getAllFamily } from \"../../../actions/family\";\nimport { getAllGenus } from \"../../../actions/genus\";\nimport { getAllProvinces } from \"../../../actions/province\";\nimport { getAllDistrict } from \"../../../actions/district\";\nimport imageService from \"../../../services/image.service\";\nimport familyService from \"../../../services/family.service\";\nimport genusService from \"../../../services/genus.service\";\nimport speciesService from \"../../../services/species.service\";\nimport locationService from \"../../../services/location.service\";\nimport addressService from \"../../../services/address.service\";\nimport paperService from \"../../../services/paper.service\";\nimport { Box } from \"@mui/system\";\n\nconst theme = createTheme();\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    padding: \"20px\",\n    width: \"100%\",\n    boxShadow: \"none\",\n    border: \"1px solid #B3B6B7\",\n  },\n}));\n\nconst Detail = (props) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { result: province } = useSelector((state) => state.province);\n  const { result: district } = useSelector((state) => state.district);\n\n  const [detail, setDetail] = useState();\n\n  useEffect(async () => {\n    const detailId = props.match.params.id;\n\n    if (detail == null && detailId) {\n      const tmpDetail = detailId\n        ? await detailService.getDetail(detailId)\n        : false;\n\n      if (tmpDetail) {\n        const image_ = await imageService.getImage(detailId);\n        tmpDetail.image = image_;\n\n        const family_ = await familyService.getFamily(tmpDetail.family_id);\n        tmpDetail.family = family_[0].name;\n        const genus_ = await genusService.getGenus(tmpDetail.genus_id);\n        tmpDetail.genus = genus_[0].name;\n        const species_ = await speciesService.getSpecies(tmpDetail.species_id);\n        tmpDetail.species = species_[0].name;\n\n        const location_ = await locationService.getLocation(detailId);\n        for (let i = 0; i < location_.length; i++) {\n          location_[i].address = await addressService.getAddress(\n            location_[i].id\n          );\n        }\n        tmpDetail.location = location_;\n\n        const paper_ = await paperService.getPaper(detailId);\n        tmpDetail.paper = paper_;\n\n        console.log(\"tmp\", tmpDetail);\n        setDetail(tmpDetail);\n      }\n    }\n    dispatch(getAllProvinces());\n    dispatch(getAllDistrict());\n  }, [detail]);\n  return (\n    <div className={`page`}>\n      <StyledEngineProvider injectFirst>\n        <ThemeProvider theme={theme}>\n          {detail && (\n            <Container maxWidth=\"lg\">\n              <Paper className={classes.root}>\n                <Typography variant=\"h4\" component=\"div\" gutterBottom>\n                  Document detail\n                </Typography>\n                <br />\n                <br />\n                <Typography variant=\"h5\" component=\"div\" gutterBottom>\n                  Type\n                </Typography>\n                <Box sx={{ paddingLeft: \"20px\" }}>\n                  <Typography variant=\"h6\" component=\"div\">\n                    <b>Family:</b> {detail.family}\n                  </Typography>\n                  <Typography variant=\"h6\" component=\"div\">\n                    <b>Genus:</b> <i>{detail.genus}</i>\n                  </Typography>\n                  <Typography variant=\"h6\" component=\"div\">\n                    <b>Species:</b> <i>{`${detail.genus} ${detail.species}`}</i>\n                  </Typography>\n                  <Box sx={{ marginLeft: \"20px\" }}></Box>\n                </Box>\n                <br />\n                <Divider />\n                <br />\n                <Typography variant=\"h5\" gutterBottom>\n                  Detail\n                </Typography>\n                <Grid container spacing={2} sx={{ paddingLeft: \"20px\" }}>\n                  <Grid item xs={12} md={4}>\n                    <Typography variant=\"subtitle1\" component=\"div\">\n                      <b>Author:</b> {detail.author}\n                    </Typography>\n                  </Grid>\n                  <Grid item xs={12} md={8}>\n                    <Typography variant=\"subtitle1\" component=\"div\">\n                      <b>Publish year:</b> {detail.publish_year}\n                    </Typography>\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <Typography variant=\"subtitle1\" component=\"div\">\n                      <b>Country:</b> {detail.country}\n                    </Typography>\n                  </Grid>\n                  <Grid item xs={12} md={8}>\n                    <Typography variant=\"subtitle1\" component=\"div\">\n                      <b>Other country:</b> {detail.country_other}\n                    </Typography>\n                  </Grid>\n                </Grid>\n                <br />\n                <Box sx={{ paddingLeft: \"20px\" }}>\n                  <Typography variant=\"subtitle1\" component=\"div\">\n                    <b>Altitude: </b> {detail.altitude}\n                  </Typography>\n                  <Typography variant=\"subtitle1\" component=\"div\">\n                    <b>Method: </b> {detail.method}\n                  </Typography>\n                  <Typography variant=\"subtitle1\" component=\"div\">\n                    <b>Habitat: </b> {detail.habitat}\n                  </Typography>\n                  <Typography variant=\"subtitle1\" component=\"div\">\n                    <b>Microhabitat: </b> {detail.microhabitat}\n                  </Typography>\n                  <Typography variant=\"subtitle1\" component=\"div\">\n                    <b>Designate: </b> {detail.designate}\n                  </Typography>\n                </Box>\n                <br />\n                <Divider />\n                <br />\n                <Typography variant=\"h5\" gutterBottom>\n                  Place to meet\n                </Typography>\n                <List>\n                  {detail.location.map((val2, index2) => (\n                    <ListItem\n                      key={index2}\n                      disablePadding\n                      sx={{ paddingLeft: \"20px\" }}\n                    >\n                      <ListItemText\n                        primary={\n                          <Grid container justifyContent=\"space-between\">\n                            <Grid item xs={12} md={6} lg={3}>\n                              <Typography variant=\"subtitle1\" component=\"div\">\n                                <b>Province: </b>{\" \"}\n                                {province &&\n                                  province.find(\n                                    (item) => item.id == parseInt(val2.province)\n                                  ).name_en}\n                              </Typography>\n                            </Grid>\n                            <Grid item xs={12} md={6} lg={3}>\n                              <Typography variant=\"subtitle1\" component=\"div\">\n                                <b>District: </b>{\" \"}\n                                {district &&\n                                  district.find(\n                                    (item) => item.id == parseInt(val2.district)\n                                  ).name_en}\n                              </Typography>\n                            </Grid>\n                            <Grid item xs={12} md={6} lg={3}>\n                              <Typography variant=\"subtitle1\" component=\"div\">\n                                <b>Locality: </b> {val2.locality}\n                              </Typography>\n                              <br />\n                            </Grid>\n                            <Grid item xs={12} md={6} lg={3}>\n                              <Typography variant=\"subtitle1\" component=\"div\">\n                                <b>Position: </b>{\" \"}\n                                {val2.address.map((item) => {\n                                  return item.name + \", \";\n                                })}\n                              </Typography>\n                            </Grid>\n                          </Grid>\n                        }\n                      />\n                    </ListItem>\n                  ))}\n                </List>\n                <Divider />\n                <br />\n                <Typography variant=\"h5\" gutterBottom>\n                  Reference\n                </Typography>\n                <Box sx={{ paddingLeft: \"20px\" }}>\n                  <Typography variant=\"subtitle1\" component=\"div\">\n                    <b>Paper referance: </b>{\" \"}\n                    {detail.paper.map((item) => {\n                      return item.name + \", \";\n                    })}\n                  </Typography>\n                </Box>\n                <br />\n                <br />\n                <Divider />\n                <br />\n                <Typography variant=\"h5\" gutterBottom>\n                  Picture\n                </Typography>\n                {detail.image.map((image, index) => (\n                  <img\n                    key={index}\n                    src={`/${image.path}`}\n                    // width=\"100%\"\n                    style={{\n                      maxHeight: \"420px\",\n                      width: \"auto\",\n                      margin: \"5px\",\n                      padding: \"5px\",\n                      border: \"1px solid #b8b8b8\",\n                    }}\n                  />\n                ))}\n                <br />\n              </Paper>\n            </Container>\n          )}\n        </ThemeProvider>\n      </StyledEngineProvider>\n    </div>\n  );\n};\n\nexport default Detail;\n","import React, { useState, useEffect, Fragment } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  ThemeProvider,\n  StyledEngineProvider,\n  createTheme,\n} from \"@mui/material/styles\";\n\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport {\n  Container,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Link,\n  Typography,\n  Button,\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  List,\n  ListItem,\n  ListItemText,\n  Grid,\n} from \"@mui/material\";\nimport { ClassNames } from \"@emotion/react\";\nimport { getAllFamily } from \"../../../actions/family\";\nimport { getAllGenus } from \"../../../actions/genus\";\nimport { getAllSpecies } from \"../../../actions/species\";\nimport { getAllDetail } from \"../../../actions/detail\";\nimport { Box } from \"@mui/system\";\n\nimport locationService from \"../../../services/location.service\";\nimport addressService from \"../../../services/address.service\";\nimport paperService from \"../../../services/paper.service\";\nimport imageService from \"../../../services/image.service\";\nimport { getAllProvinces } from \"../../../actions/province\";\nimport { getAllDistrict } from \"../../../actions/district\";\nimport detailService from \"../../../services/detail.service\";\nimport { updateDetailFn } from \"./insertFn\";\n\nconst theme = createTheme();\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    padding: \"20px\",\n    boxShadow: \"none\",\n    border: \"1px solid #B3B6B7\",\n  },\n  deleteBg: {\n    backgroundColor: \"rgba(255, 36, 29, 0.4)\",\n  },\n}));\n\nconst Manage = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { result: detail } = useSelector((state) => state.detail);\n  const { result: family } = useSelector((state) => state.family);\n  const { result: genus } = useSelector((state) => state.genus);\n  const { result: species } = useSelector((state) => state.species);\n  const { result: province } = useSelector((state) => state.province);\n  const { result: district } = useSelector((state) => state.district);\n\n  const [openDetail, setOpenDetail] = useState(false);\n  const [logDetail, setLogDetail] = useState(-1);\n  const [onDetail, setOnDetail] = useState(null);\n\n  useEffect(() => {\n    dispatch(getAllFamily());\n    dispatch(getAllGenus());\n    dispatch(getAllSpecies());\n    dispatch(getAllProvinces());\n    dispatch(getAllDistrict());\n    dispatch(getAllDetail());\n\n    const preData = async () => {\n      const preDetail = await detailService.getAllDetailAdmin();\n      setOnDetail(preDetail);\n    };\n\n    if (onDetail == null) {\n      preData();\n    }\n  }, [onDetail]);\n\n  const preDetail = async (id) => {\n    const selectDetail = detail.find((item) => item.id == id);\n\n    selectDetail.family = family.find(\n      (item) => item.id == selectDetail.family_id\n    ).name;\n    selectDetail.genus = genus.find(\n      (item) => item.id == selectDetail.genus_id\n    ).name;\n    selectDetail.species = species.find(\n      (item) => item.id == selectDetail.species_id\n    ).name;\n\n    const location_ = await locationService.getLocation(selectDetail.id);\n    for (let i = 0; i < location_.length; i++) {\n      location_[i].address = await addressService.getAddress(location_[i].id);\n    }\n\n    selectDetail.location = location_;\n\n    selectDetail.image = await imageService.getImage(selectDetail.id);\n    selectDetail.paper = await paperService.getPaper(selectDetail.id);\n\n    return selectDetail;\n  };\n\n  const handleOnClickDetailId = async (id) => {\n    const selectDetail = await preDetail(id);\n    setLogDetail(selectDetail);\n    setOpenDetail(true);\n  };\n\n  const handelOnClose = () => {\n    setOpenDetail(false);\n  };\n\n  const handleOnClickDelete = async (id) => {\n    const detail_ = [...onDetail];\n    const index = detail_\n      .map((e) => {\n        return e.id;\n      })\n      .indexOf(id);\n\n    detail_[index].active = 0;\n\n    let res = false;\n    res = await updateDetailFn(detail_[index]);\n    if (res == id) {\n      setOnDetail(detail_);\n    }\n  };\n\n  const handleOnClickActive = async (id) => {\n    const detail_ = [...onDetail];\n    const index = detail_\n      .map((e) => {\n        return e.id;\n      })\n      .indexOf(id);\n\n    detail_[index].active = 1;\n    console.log(\"detail\", detail_[index]);\n\n    let res = false;\n    res = await updateDetailFn(detail_[index]);\n    if (res == id) {\n      setOnDetail(detail_);\n    }\n  };\n\n  return (\n    <div className={`page`}>\n      <StyledEngineProvider injectFirst>\n        <ThemeProvider theme={theme}>\n          <Container maxWidth=\"xl\">\n            <Paper className={classes.root}>\n              <TableContainer>\n                <Table stickyHeader>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell align=\"left\">\n                        <Typography\n                          varaint=\"subtitle1\"\n                          gutterBottom\n                          component=\"div\"\n                        >\n                          # id\n                        </Typography>\n                      </TableCell>\n                      <TableCell align=\"left\">\n                        <Typography\n                          varaint=\"subtitle1\"\n                          gutterBottom\n                          component=\"div\"\n                        >\n                          Family\n                        </Typography>\n                      </TableCell>\n                      <TableCell align=\"left\">\n                        <Typography\n                          varaint=\"subtitle1\"\n                          gutterBottom\n                          component=\"div\"\n                        >\n                          Genus\n                        </Typography>\n                      </TableCell>\n                      <TableCell align=\"left\">\n                        <Typography\n                          varaint=\"subtitle1\"\n                          gutterBottom\n                          component=\"div\"\n                        >\n                          Species\n                        </Typography>\n                      </TableCell>\n                      <TableCell align=\"left\">\n                        <Typography\n                          varaint=\"subtitle1\"\n                          gutterBottom\n                          component=\"div\"\n                        >\n                          Author\n                        </Typography>\n                      </TableCell>\n                      <TableCell align=\"center\">\n                        <Typography\n                          varaint=\"subtitle1\"\n                          gutterBottom\n                          component=\"div\"\n                        >\n                          Action\n                        </Typography>\n                      </TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {onDetail &&\n                      onDetail.map((val, index) => (\n                        <TableRow\n                          key={index}\n                          className={val.active == 0 && classes.deleteBg}\n                        >\n                          <TableCell align=\"left\">\n                            <Link\n                              underline=\"hover\"\n                              sx={{ cursor: \"pointer\" }}\n                              onClick={() => {\n                                handleOnClickDetailId(val.id);\n                              }}\n                            >\n                              {val.id}\n                            </Link>\n                          </TableCell>\n                          <TableCell align=\"left\">\n                            <Typography variant=\"subtitle1\" component=\"div\">\n                              {family &&\n                                family.find((item) => item.id == val.family_id)\n                                  .name}\n                            </Typography>\n                          </TableCell>\n                          <TableCell align=\"left\">\n                            <Typography variant=\"subtitle1\" component=\"div\">\n                              {genus &&\n                                genus.find((item) => item.id == val.genus_id)\n                                  .name}\n                            </Typography>\n                          </TableCell>\n                          <TableCell align=\"left\">\n                            <Typography variant=\"subtitle1\" component=\"div\">\n                              {species &&\n                                species.find(\n                                  (item) => item.id == val.species_id\n                                ).name}\n                            </Typography>\n                          </TableCell>\n                          <TableCell align=\"left\">\n                            <Typography variant=\"subtitle1\" component=\"div\">\n                              {val.author}\n                            </Typography>\n                          </TableCell>\n                          <TableCell align=\"center\">\n                            <Box\n                              sx={{\n                                display: \"flex\",\n                                alignItems: \"center\",\n                                justifyContent: \"space-around\",\n                              }}\n                            >\n                              <Button\n                                size=\"small\"\n                                variant=\"contained\"\n                                color=\"warning\"\n                                onClick={() => handleOnClickDetailId(val.id)}\n                                href={`/editDetailForm/${val.id}`}\n                              >\n                                Edit\n                              </Button>\n                              {val.active == 1 ? (\n                                <Button\n                                  size=\"small\"\n                                  variant=\"contained\"\n                                  color=\"error\"\n                                  onClick={() => handleOnClickDelete(val.id)}\n                                >\n                                  Delete\n                                </Button>\n                              ) : (\n                                <Button\n                                  size=\"small\"\n                                  variant=\"contained\"\n                                  color=\"success\"\n                                  onClick={() => handleOnClickActive(val.id)}\n                                >\n                                  Active\n                                </Button>\n                              )}\n                            </Box>\n                          </TableCell>\n                        </TableRow>\n                      ))}\n                  </TableBody>\n                </Table>\n              </TableContainer>\n            </Paper>\n            {logDetail != -1 && (\n              <Dialog open={openDetail} onClose={handelOnClose}>\n                <DialogTitle sx={{ minWidth: \"1000px\" }}>\n                  Log Detail\n                </DialogTitle>\n                <DialogContent>\n                  <Typography variant=\"subtitle1\" component=\"div\">\n                    <b>id: </b>#{logDetail.id}\n                  </Typography>\n                  <Typography variant=\"subtitle1\" component=\"div\">\n                    <b>Family: </b> {logDetail.family}\n                  </Typography>\n                  <Typography variant=\"subtitle1\" component=\"div\">\n                    <b>Genus: </b> <i>{logDetail.genus}</i>\n                  </Typography>\n                  <Typography variant=\"subtitle1\" component=\"div\">\n                    <b>Species: </b>{\" \"}\n                    <i>{`${logDetail.genus} ${logDetail.species}`}</i>\n                  </Typography>\n                  <Typography variant=\"subtitle1\" component=\"div\">\n                    <b>Author: </b> {logDetail.author}\n                  </Typography>\n                  <Typography variant=\"subtitle1\" component=\"div\">\n                    <b>Publish year:</b> {logDetail.publish_year}\n                  </Typography>\n                  <Typography variant=\"subtitle1\" component=\"div\">\n                    <b>Country:</b> {logDetail.country}\n                  </Typography>\n                  <Typography variant=\"subtitle1\" component=\"div\">\n                    <b>Other country:</b> {logDetail.country_other}\n                  </Typography>\n                  <Typography variant=\"subtitle1\" component=\"div\">\n                    <b>Altitude: </b> {logDetail.altitude}\n                  </Typography>\n                  <Typography variant=\"subtitle1\" component=\"div\">\n                    <b>Method: </b> {logDetail.method}\n                  </Typography>\n                  <Typography variant=\"subtitle1\" component=\"div\">\n                    <b>Habitat: </b> {logDetail.habitat}\n                  </Typography>\n                  <Typography variant=\"subtitle1\" component=\"div\">\n                    <b>Microhabitat: </b> {logDetail.microhabitat}\n                  </Typography>\n                  <Typography variant=\"subtitle1\" component=\"div\">\n                    <b>Designate: </b> {logDetail.designate}\n                  </Typography>\n                  <List>\n                    {logDetail.location &&\n                      logDetail.location.map((val2, index2) => (\n                        <ListItem\n                          key={index2}\n                          disablePadding\n                          sx={{ paddingLeft: \"20px\" }}\n                        >\n                          <ListItemText\n                            primary={\n                              <Grid container justifyContent=\"space-between\">\n                                <Grid item xs={12} md={6} lg={3}>\n                                  <Typography\n                                    variant=\"subtitle1\"\n                                    component=\"div\"\n                                  >\n                                    <b>Province: </b>\n                                    <br />\n                                    {province &&\n                                      province.find(\n                                        (item) =>\n                                          item.id == parseInt(val2.province)\n                                      ).name_en}\n                                  </Typography>\n                                </Grid>\n                                <Grid item xs={12} md={6} lg={3}>\n                                  <Typography\n                                    variant=\"subtitle1\"\n                                    component=\"div\"\n                                  >\n                                    <b>District: </b>\n                                    <br />\n                                    {district &&\n                                      district.find(\n                                        (item) =>\n                                          item.id == parseInt(val2.district)\n                                      ).name_en}\n                                  </Typography>\n                                </Grid>\n                                <Grid item xs={12} md={6} lg={3}>\n                                  <Typography\n                                    variant=\"subtitle1\"\n                                    component=\"div\"\n                                  >\n                                    <b>Locality: </b> <br />\n                                    {val2.locality}\n                                  </Typography>\n                                  <br />\n                                </Grid>\n                                <Grid item xs={12} md={6} lg={3}>\n                                  <Typography\n                                    variant=\"subtitle1\"\n                                    component=\"div\"\n                                  >\n                                    <b>Position: </b>\n                                    <br />\n                                    {val2.address.map((item) => {\n                                      return item.name + \", \";\n                                    })}\n                                  </Typography>\n                                </Grid>\n                              </Grid>\n                            }\n                          />\n                        </ListItem>\n                      ))}\n                  </List>\n                  <Typography variant=\"subtitle1\" component=\"div\">\n                    <b>Paper referance: </b>{\" \"}\n                    {logDetail.paper.map((item) => {\n                      return item.name + \", \";\n                    })}\n                  </Typography>\n                  {logDetail.image &&\n                    logDetail.image.map((image, index) => (\n                      <img\n                        key={index}\n                        src={`/${image.path}`}\n                        // width=\"100%\"\n                        style={{\n                          maxHeight: \"360px\",\n                          width: \"auto\",\n                          margin: \"5px\",\n                          padding: \"5px\",\n                          border: \"1px solid #b8b8b8\",\n                        }}\n                      />\n                    ))}\n                </DialogContent>\n              </Dialog>\n            )}\n          </Container>\n        </ThemeProvider>\n      </StyledEngineProvider>\n    </div>\n  );\n};\n\nexport default Manage;\n","import React, {\n  useRef,\n  useState,\n  useEffect,\n  Fragment,\n  useCallback,\n} from \"react\";\nimport {\n  ThemeProvider,\n  StyledEngineProvider,\n  createTheme,\n} from \"@mui/material/styles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { Field, Formik, Form, FieldArray, ErrorMessage } from \"formik\";\nimport { Select, SimpleFileUpload, Switch, TextField } from \"formik-mui\";\n\nimport {\n  Container,\n  Paper,\n  Grid,\n  Typography,\n  Button,\n  Link,\n  Divider,\n  Autocomplete,\n  MenuItem,\n  IconButton,\n  Snackbar,\n  Collapse,\n  Alert,\n  Dialog,\n  DialogTitle,\n  FormControl,\n  List,\n  ListItem,\n  ListItemIcon,\n} from \"@mui/material\";\nimport {\n  Close,\n  WindowSharp,\n  AddAPhoto,\n  Backspace,\n  Delete,\n  DeleteOutline,\n  SettingsBackupRestore,\n} from \"@mui/icons-material\";\nimport MapView from \"../shared/MapView\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"./index.css\";\nimport { useDropzone } from \"react-dropzone\";\n\nimport { getAllFamily } from \"../../../actions/family\";\nimport { getAllGenus } from \"../../../actions/genus\";\nimport { getAllSpecies } from \"../../../actions/species\";\nimport { Box } from \"@mui/system\";\n\nimport familyService from \"../../../services/family.service\";\nimport genusService from \"../../../services/genus.service\";\nimport speciesService from \"../../../services/species.service\";\nimport locationService from \"../../../services/location.service\";\nimport addressService from \"../../../services/address.service\";\nimport paperService from \"../../../services/paper.service\";\nimport imageService from \"../../../services/image.service\";\nimport { getAllProvinces } from \"../../../actions/province\";\nimport { getAllDistrict } from \"../../../actions/district\";\nimport detailService from \"../../../services/detail.service\";\nimport {\n  postAddressFn,\n  postImageFn,\n  postLocationFn,\n  postPaperFn,\n  updateAddressFn,\n  updateDetailFn,\n  updateDetailTypeFn,\n  updateImage,\n  updateLocationFn,\n  updatePaperFn,\n} from \"./insertFn\";\n\nconst theme = createTheme({});\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  paper: {\n    padding: \"10px\",\n    boxShadow: \"none\",\n    border: \"1px solid #B3B6B7\",\n  },\n}));\nconst EditDetailForm = (props) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const formRef = useRef();\n  const { result: dbProvince } = useSelector((state) => state.province);\n  const { result: dbDistrict } = useSelector((state) => state.district);\n  const { result: dbFamily } = useSelector((state) => state.family);\n  const { result: dbGenus } = useSelector((state) => state.genus);\n  const { result: dbSpecies } = useSelector((state) => state.species);\n\n  const [oldDetail, setOldDetail] = useState();\n  const [currentDetail, setCurrentDetail] = useState();\n  const [detail, setDetail] = useState();\n  const [years, setYears] = useState([]);\n  const [type, setType] = useState();\n  const [general, setGeneral] = useState();\n  const [location, setLocation] = useState();\n  const [paper, setPaper] = useState();\n  const [image, setImage] = useState();\n  const [final, setFinal] = useState();\n\n  useEffect(async () => {\n    const detailId = props.match.params.id;\n\n    if (detail == null && detailId) {\n      const tmpDetail = detailId\n        ? await detailService.getDetailAdmin(detailId)\n        : false;\n\n      if (tmpDetail) {\n        const image_ = await imageService.getImageAdmin(detailId);\n        tmpDetail.image = image_;\n\n        const family_ = await familyService.getFamily(tmpDetail.family_id);\n        tmpDetail.family = family_[0].name;\n        const genus_ = await genusService.getGenus(tmpDetail.genus_id);\n        tmpDetail.genus = genus_[0].name;\n        const species_ = await speciesService.getSpecies(tmpDetail.species_id);\n        tmpDetail.species = species_[0].name;\n\n        const location_ = await locationService.getLocationAdmin(detailId);\n        for (let i = 0; i < location_.length; i++) {\n          location_[i].address = await addressService.getAddressAdmin(\n            location_[i].id\n          );\n        }\n        tmpDetail.location = location_;\n\n        const paper_ = await paperService.getPaperAdmin(detailId);\n        tmpDetail.paper = paper_;\n\n        console.log(\"tmp\", tmpDetail);\n\n        dispatch(getAllProvinces());\n        dispatch(getAllDistrict());\n        dispatch(getAllFamily());\n        dispatch(getAllGenus());\n        dispatch(getAllSpecies());\n\n        // setOldDetail(tmpDetail);\n        // setCurrentDetail(tmpDetail);\n        setDetail(tmpDetail);\n        setFinal(tmpDetail);\n      }\n    }\n\n    const createListYear = () => {\n      const date = new Date();\n      const tmpYesrs = [];\n      let nowYear = date.getFullYear();\n      console.log(`now year : ${nowYear}`);\n      for (let i = nowYear; i > nowYear - 100; i--) {\n        tmpYesrs.push(i);\n      }\n      setYears([...tmpYesrs]);\n    };\n\n    createListYear();\n  }, [detail]);\n\n  const onKeyDown = (keyEvent) => {\n    if ((keyEvent.charCode || keyEvent.keyCode) === 13) {\n      keyEvent.preventDefault();\n    }\n  };\n\n  const handleTypeSubmit = async (values) => {\n    const type_ = {\n      id: detail.id,\n      family_id: parseInt(values.family_id),\n      genus_id: parseInt(values.genus_id),\n      species_id: parseInt(values.species_id),\n    };\n    let res = false;\n    res = await updateDetailTypeFn(type_);\n    if (res == type_.id) {\n      setType(true);\n    }\n    console.log(\"res update type\", res);\n  };\n\n  const handleGeneralSubmit = (values) => {\n    const general_ = values;\n    general_.id = detail.id;\n    setGeneral(general_);\n    let res = false;\n    res = updateDetailFn(general_);\n    if (res == general_.id) {\n      setGeneral(true);\n    }\n  };\n\n  const handleLocationSubmit = async (values) => {\n    let location_ = values.location;\n    let checkError = false;\n\n    for (let i = 0; i < location_.length; i++) {\n      let resLocation = false;\n      const onLocation = { ...location_[i] };\n      delete onLocation.address;\n\n      console.log(\"onLocation\", onLocation);\n      if (location_[i].id == -1) {\n        resLocation = await postLocationFn(onLocation, detail.id);\n      } else {\n        resLocation = await updateLocationFn(onLocation, detail.id);\n      }\n      if (resLocation) {\n        checkError = true;\n      } else {\n        checkError = false;\n      }\n      for (let j = 0; j < location_[i].address.length; j++) {\n        const onAddress = { ...location_[i].address[j] };\n        console.log(\"resLocation\", resLocation);\n        let resAddress = false;\n        if (onAddress.id == -1) {\n          resAddress = await postAddressFn(onAddress, resLocation);\n        } else {\n          resAddress = await updateAddressFn(onAddress);\n        }\n        if (resAddress) {\n          checkError = true;\n        } else {\n          checkError = false;\n        }\n      }\n    }\n\n    if (checkError) {\n      setLocation(true);\n    }\n  };\n\n  const handlePaperSubmit = async (values) => {\n    let paper_ = values.paper;\n    let checkError = false;\n\n    for (let i = 0; i < paper_.length; i++) {\n      const onPaper = { ...paper_[i] };\n      let res = false;\n      if (onPaper.id == -1) {\n        res = await postPaperFn(onPaper, detail.id);\n      } else {\n        res = await updatePaperFn(onPaper);\n      }\n      if (res) {\n        checkError = true;\n      } else {\n        checkError = false;\n      }\n    }\n    if (checkError) {\n      setPaper(paper_);\n    }\n  };\n\n  const handleImageSubmit = (values) => {\n    let image_ = values.image;\n\n    let checkError = true;\n    for (let i = 0; i < image_.length; i++) {\n      const onImage = { ...image_[i] };\n      let res = false;\n      if (onImage.id == -1) {\n        const formData = new FormData();\n        formData.append(\"image\", onImage.name);\n        formData.append(\"detail_id\", detail.id);\n        res = postImageFn(formData);\n      } else {\n        res = updateImage(onImage);\n      }\n\n      if (res) {\n        checkError = true;\n      } else {\n        checkError = false;\n      }\n    }\n\n    if (checkError) {\n      setImage(true);\n    }\n  };\n\n  return (\n    <div className={`page`}>\n      <StyledEngineProvider injectFirst>\n        <ThemeProvider theme={theme}>\n          <Container maxWidth=\"lg\">\n            {detail != null && (\n              <Paper className={classes.paper}>\n                <Typography\n                  variant=\"h5\"\n                  component=\"div\"\n                  sx={{ fontWeight: 600 }}\n                  gutterBottom\n                >\n                  Edit from ID #{oldDetail && oldDetail.id}\n                </Typography>\n                <Divider />\n                <br />\n                <Typography\n                  variant=\"h6\"\n                  component=\"div\"\n                  sx={{ fontWeight: 600 }}\n                >\n                  Family Action\n                </Typography>\n                <Collapse in={type ? true : false}>\n                  <Alert>Save type</Alert>\n                </Collapse>\n                <Formik\n                  initialValues={{\n                    family_id: detail.family_id,\n                    genus_id: detail.genus_id,\n                    species_id: detail.species_id,\n                  }}\n                  enableReinitialize\n                  innerRef={formRef}\n                  onSubmit={(values, setSubmitting) => {\n                    try {\n                      handleTypeSubmit(values);\n                    } catch (err) {\n                      console.log(\"error\", err);\n                    }\n                  }}\n                >\n                  {({\n                    values,\n                    errors,\n                    isSubmitting,\n                    touched,\n                    handleBlur,\n                    setFieldValue,\n                  }) => (\n                    <Form\n                      autoComplete=\"off\"\n                      className={classes.form}\n                      onKeyDown={onKeyDown}\n                    >\n                      <Grid container spacing={2}>\n                        <Grid item xs={12} lg={4}>\n                          <Typography variant=\"subtitle1\" component=\"div\">\n                            Family\n                          </Typography>\n                          <Field\n                            component={Select}\n                            formControl={{\n                              sx: { width: \"100%\", size: \"small\" },\n                            }}\n                            size=\"small\"\n                            id=\"family_id\"\n                            name=\"family_id\"\n                          >\n                            {dbFamily &&\n                              dbFamily.map((val, index) => (\n                                <MenuItem key={index} value={val.id}>\n                                  {val.name}\n                                </MenuItem>\n                              ))}\n                          </Field>\n                        </Grid>\n                        <Grid item xs={12} lg={4}>\n                          <Typography variant=\"subtitle1\" component=\"div\">\n                            Genus\n                          </Typography>\n                          <Field\n                            component={Select}\n                            formControl={{\n                              sx: { width: \"100%\", size: \"small\" },\n                            }}\n                            size=\"small\"\n                            id=\"genus_id\"\n                            name=\"genus_id\"\n                          >\n                            {dbGenus &&\n                              dbGenus\n                                .filter(\n                                  (item) =>\n                                    item.family_id === Number(values.family_id)\n                                )\n                                .map((val, index) => (\n                                  <MenuItem key={index} value={val.id}>\n                                    {val.name}\n                                  </MenuItem>\n                                ))}\n                          </Field>\n                        </Grid>\n                        <Grid item xs={12} lg={4}>\n                          <Typography variant=\"subtitle1\" component=\"div\">\n                            Species\n                          </Typography>\n                          <Field\n                            component={Select}\n                            formControl={{\n                              sx: { width: \"100%\", size: \"small\" },\n                            }}\n                            size=\"small\"\n                            id=\"species_id\"\n                            name=\"species_id\"\n                          >\n                            {dbSpecies &&\n                              dbSpecies\n                                .filter(\n                                  (item) =>\n                                    item.genus_id === Number(values.genus_id)\n                                )\n                                .map((val, index) => (\n                                  <MenuItem key={index} value={val.id}>\n                                    {val.name}\n                                  </MenuItem>\n                                ))}\n                          </Field>\n                        </Grid>\n                      </Grid>\n                      <br />\n                      <Button type=\"submit\" variant=\"contained\" size=\"small\">\n                        save\n                      </Button>\n                    </Form>\n                  )}\n                </Formik>\n                <br />\n                <Divider />\n                <br />\n                <Typography\n                  variant=\"h6\"\n                  component=\"div\"\n                  sx={{ fontWeight: 600 }}\n                >\n                  Detail\n                </Typography>\n                <Collapse in={general ? true : false}>\n                  <Alert>Save Detail</Alert>\n                </Collapse>\n                <Formik\n                  initialValues={{\n                    author: detail.author,\n                    publish_year: detail.publish_year,\n                    country: detail.country,\n                    country_other: detail.country_other,\n                    altitude: detail.altitude,\n                    method: detail.method,\n                    habitat: detail.habitat,\n                    microhabitat: detail.microhabitat,\n                    designate: detail.designate,\n                  }}\n                  onSubmit={(values, setSubmitting) => {\n                    try {\n                      handleGeneralSubmit(values);\n                    } catch (err) {\n                      console.log(\"general err\", err);\n                    }\n                  }}\n                >\n                  {({\n                    values,\n                    errors,\n                    isSubmitting,\n                    touched,\n                    handleBlur,\n                    setFieldValue,\n                  }) => (\n                    <Form\n                      autoComplete=\"off\"\n                      className={classes.form}\n                      onKeyDown={onKeyDown}\n                    >\n                      <Grid container spacing={2}>\n                        <Grid item xs={9} className={`author`}>\n                          <Typography varaint=\"subtitle1\">Author</Typography>\n                          <Field\n                            name=\"author\"\n                            component={TextField}\n                            fullWidth\n                            size=\"small\"\n                          />\n                        </Grid>\n                        <Grid item xs={3} className={`year`}>\n                          <Typography varaint=\"subtitle1\">\n                            publish year\n                          </Typography>\n                          <Field\n                            name=\"publish_year\"\n                            component={Select}\n                            formControl={{\n                              sx: { width: \"100%\", size: \"small\" },\n                            }}\n                            size=\"small\"\n                            MenuProps={{\n                              PaperProps: { sx: { maxHeight: 300 } },\n                            }}\n                          >\n                            {years &&\n                              years.map((val, index) => (\n                                <MenuItem key={index} value={val}>\n                                  {val}\n                                </MenuItem>\n                              ))}\n                          </Field>\n                        </Grid>\n                        <Grid item xs={3}>\n                          <Typography variant=\"subtitle1\">Country</Typography>\n                          <Field\n                            name=\"country\"\n                            component={TextField}\n                            disabled\n                            fullWidth\n                            value={values.country}\n                            size=\"small\"\n                          />\n                        </Grid>\n                        <Grid item xs={9}>\n                          <Typography variant=\"subtitle1\">\n                            Other country\n                          </Typography>\n                          <Field\n                            name=\"country_other\"\n                            component={TextField}\n                            fullWidth\n                            size=\"small\"\n                            placeholder=\"if any\"\n                          />\n                        </Grid>\n                        <Grid item xs={12}>\n                          <Typography variant=\"subtitle1\">Altitude</Typography>\n                          <Field\n                            name=\"altitude\"\n                            component={TextField}\n                            fullWidth\n                            multiline\n                            rows={2}\n                            size=\"small\"\n                          ></Field>\n                        </Grid>\n                        <Grid item xs={12}>\n                          <Typography variant=\"subtitle1\">Method</Typography>\n                          <Field\n                            name=\"method\"\n                            component={TextField}\n                            fullWidth\n                            multiline\n                            rows={2}\n                            size=\"small\"\n                          ></Field>\n                        </Grid>\n                        <Grid item xs={12}>\n                          <Typography variant=\"subtitle1\">habitat</Typography>\n                          <Field\n                            name=\"habitat\"\n                            component={TextField}\n                            fullWidth\n                            multiline\n                            rows={2}\n                            size=\"small\"\n                          ></Field>\n                        </Grid>\n                        <Grid item xs={12}>\n                          <Typography variant=\"subtitle1\">\n                            microhabitat\n                          </Typography>\n                          <Field\n                            name=\"microhabitat\"\n                            component={TextField}\n                            fullWidth\n                            multiline\n                            rows={2}\n                            size=\"small\"\n                          ></Field>\n                        </Grid>\n                        <Grid item xs={12}>\n                          <Typography variant=\"subtitle1\">Designate</Typography>\n                          <Field\n                            name=\"designate\"\n                            component={TextField}\n                            fullWidth\n                            multiline\n                            rows={2}\n                            size=\"small\"\n                          ></Field>\n                        </Grid>\n                      </Grid>\n                      <br />\n                      <Button type=\"submit\" variant=\"contained\" size=\"small\">\n                        save\n                      </Button>\n                    </Form>\n                  )}\n                </Formik>\n                <br />\n                <Divider />\n                <br />\n                <Typography\n                  variant=\"h6\"\n                  component=\"div\"\n                  sx={{ fontWeight: 600 }}\n                >\n                  Location\n                </Typography>\n                <Collapse in={location ? true : false}>\n                  <Alert>Save Locations</Alert>\n                </Collapse>\n                <Formik\n                  initialValues={{ location: detail.location }}\n                  onSubmit={(values, setSubmitting) => {\n                    try {\n                      handleLocationSubmit(values);\n                    } catch (err) {}\n                  }}\n                >\n                  {({\n                    values,\n                    errors,\n                    isSubmitting,\n                    touched,\n                    handleBlur,\n                    setFieldValue,\n                  }) => (\n                    <Form\n                      autoComplete=\"off\"\n                      className={classes.form}\n                      onKeyDown={onKeyDown}\n                    >\n                      <FieldArray name=\"location\">\n                        {({ push, pop, remove }) => (\n                          <Fragment>\n                            <Grid container spacing={2}>\n                              <Grid item xs={12} style={{ display: \"flex\" }}>\n                                <Button\n                                  variant=\"contained\"\n                                  size=\"small\"\n                                  color=\"warning\"\n                                  onClick={() =>\n                                    push({\n                                      id: -1,\n                                      detail_id: values.location[0].detail_id,\n                                      province: \"\",\n                                      district: \"\",\n                                      locality: \"\",\n                                      active: 1,\n                                      address: [\n                                        {\n                                          id: -1,\n                                          location_id: \"newLocation\",\n                                          name: \"\",\n                                          latitude: \"\",\n                                          longitude: \"\",\n                                          active: 1,\n                                        },\n                                      ],\n                                    })\n                                  }\n                                >\n                                  Add location\n                                </Button>\n                              </Grid>\n                              {values.location &&\n                                values.location.map((val, index) => (\n                                  <Grid item xs={12} key={index}>\n                                    <Paper\n                                      sx={{\n                                        padding: \"10px\",\n                                        paddingBottom: \"15px\",\n                                      }}\n                                    >\n                                      <Grid container spacing={2}>\n                                        <Grid item xs={12}>\n                                          <Typography varaint=\"subtitle1\">\n                                            Location {index + 1}.\n                                          </Typography>\n                                        </Grid>\n                                        <Grid\n                                          item\n                                          xs={3}\n                                          className={`province`}\n                                        >\n                                          <Typography varaint=\"subtitle1\">\n                                            Province\n                                          </Typography>\n                                          <Field\n                                            component={Select}\n                                            formControl={{\n                                              sx: {\n                                                width: \"100%\",\n                                                size: \"small\",\n                                              },\n                                            }}\n                                            MenuProps={{\n                                              PaperProps: {\n                                                sx: { maxHeight: 500 },\n                                              },\n                                            }}\n                                            size=\"small\"\n                                            id={`location[${index}].province`}\n                                            name={`location[${index}].province`}\n                                          >\n                                            {dbProvince &&\n                                              dbProvince\n                                                .sort((a, b) =>\n                                                  a.name_en > b.name_en ? 1 : -1\n                                                )\n                                                .map((val, index) => (\n                                                  <MenuItem\n                                                    key={index}\n                                                    value={val.id}\n                                                  >\n                                                    {val.name_en}\n                                                  </MenuItem>\n                                                ))}\n                                          </Field>\n                                        </Grid>\n                                        <Grid\n                                          item\n                                          xs={3}\n                                          className={`district`}\n                                        >\n                                          <Typography varaint=\"subtitle1\">\n                                            District\n                                          </Typography>\n\n                                          <Field\n                                            component={Select}\n                                            formControl={{\n                                              sx: {\n                                                width: \"100%\",\n                                                size: \"small\",\n                                              },\n                                            }}\n                                            MenuProps={{\n                                              PaperProps: {\n                                                sx: { maxHeight: 500 },\n                                              },\n                                            }}\n                                            size=\"small\"\n                                            id={`location[${index}].district`}\n                                            name={`location[${index}].district`}\n                                          >\n                                            {dbDistrict &&\n                                              dbDistrict\n                                                .filter(\n                                                  (item) =>\n                                                    item.province_id ==\n                                                    values.location[index]\n                                                      .province\n                                                )\n                                                .sort((a, b) =>\n                                                  a.name_en > b.name_en ? 1 : -1\n                                                )\n                                                .map((val, index) => (\n                                                  <MenuItem\n                                                    key={index}\n                                                    value={val.id}\n                                                  >\n                                                    {val.name_en}\n                                                  </MenuItem>\n                                                ))}\n                                          </Field>\n                                        </Grid>\n                                        <Grid\n                                          item\n                                          xs={6}\n                                          className={`locality`}\n                                        >\n                                          <Typography varaint=\"subtitle1\">\n                                            Locality\n                                          </Typography>\n                                          <Box style={{ display: \"flex\" }}>\n                                            <Field\n                                              name={`location[${index}].locality`}\n                                              component={TextField}\n                                              size=\"small\"\n                                              fullWidth\n                                            />\n                                            <div style={{ flexGrow: 1 }} />\n                                            {val.active == 1 ? (\n                                              <IconButton\n                                                color=\"error\"\n                                                sx={{ marginLeft: \"1rem\" }}\n                                                onClick={() => {\n                                                  values.location.length > 1 &&\n                                                  val.id == -1\n                                                    ? remove(index)\n                                                    : setFieldValue(\n                                                        `location[${index}].active`,\n                                                        0\n                                                      );\n                                                }}\n                                              >\n                                                <DeleteOutline />\n                                              </IconButton>\n                                            ) : (\n                                              <IconButton\n                                                color=\"success\"\n                                                sx={{ marginLeft: \"1rem\" }}\n                                                onClick={() => {\n                                                  values.location.length > 1 &&\n                                                  val.id == -1\n                                                    ? remove(index)\n                                                    : setFieldValue(\n                                                        `location[${index}].active`,\n                                                        1\n                                                      );\n                                                }}\n                                              >\n                                                <SettingsBackupRestore />\n                                              </IconButton>\n                                            )}\n                                          </Box>\n                                        </Grid>\n                                        <Grid item xs={12}>\n                                          <FieldArray\n                                            name={`location[${index}].address`}\n                                          >\n                                            {({ push, remove }) => (\n                                              <Grid container spacing={2}>\n                                                <Grid\n                                                  item\n                                                  xs={12}\n                                                  style={{\n                                                    display: \"flex\",\n                                                  }}\n                                                >\n                                                  <Typography\n                                                    variant=\"subtitle1\"\n                                                    gutterBottom\n                                                  >\n                                                    address\n                                                  </Typography>\n                                                  <Button\n                                                    sx={{\n                                                      marginLeft: \"2rem\",\n                                                    }}\n                                                    color=\"warning\"\n                                                    variant=\"contained\"\n                                                    size=\"small\"\n                                                    onClick={() => {\n                                                      push({\n                                                        id: -1,\n                                                        name: \"\",\n                                                        latitude: \"\",\n                                                        longitude: \"\",\n                                                        active: 1,\n                                                      });\n                                                    }}\n                                                  >\n                                                    Add\n                                                  </Button>\n                                                </Grid>\n                                                {values.location[index]\n                                                  .address &&\n                                                  values.location[\n                                                    index\n                                                  ].address.map(\n                                                    (val2, subIndex) => (\n                                                      <Grid\n                                                        item\n                                                        xs={12}\n                                                        key={subIndex}\n                                                      >\n                                                        <Grid\n                                                          container\n                                                          spacing={2}\n                                                          alignItems=\"flex-end\"\n                                                        >\n                                                          <Grid\n                                                            item\n                                                            xs={4}\n                                                            sx={{\n                                                              display: \"flex\",\n                                                              alignItems:\n                                                                \"flex-end\",\n                                                            }}\n                                                          >\n                                                            <Typography\n                                                              varaint=\"subtitle1\"\n                                                              gutterBottom\n                                                              sx={{\n                                                                marginRight:\n                                                                  \"1rem\",\n                                                              }}\n                                                            >\n                                                              {subIndex + 1}.\n                                                            </Typography>\n                                                            <Box\n                                                              sx={{\n                                                                flexGrow: 1,\n                                                              }}\n                                                            />\n                                                            <Field\n                                                              name={`location[${index}].address[${subIndex}].name`}\n                                                              component={\n                                                                TextField\n                                                              }\n                                                              size=\"small\"\n                                                              fullWidth\n                                                              placeholder=\"Name\"\n                                                            />\n                                                          </Grid>\n                                                          <Grid item xs={3}>\n                                                            <Field\n                                                              name={`location[${index}].address[${subIndex}].latitude`}\n                                                              component={\n                                                                TextField\n                                                              }\n                                                              size=\"small\"\n                                                              fullWidth\n                                                              placeholder=\"Latitude\"\n                                                            />\n                                                          </Grid>\n                                                          <Grid item xs={3}>\n                                                            <Field\n                                                              name={`location[${index}].address[${subIndex}].longitude`}\n                                                              component={\n                                                                TextField\n                                                              }\n                                                              size=\"small\"\n                                                              fullWidth\n                                                              placeholder=\"Longitude\"\n                                                            />\n                                                          </Grid>\n                                                          <Grid item xs={1}>\n                                                            {val2.active ==\n                                                            1 ? (\n                                                              <IconButton\n                                                                color=\"error\"\n                                                                onClick={() => {\n                                                                  values\n                                                                    .location[\n                                                                    index\n                                                                  ].address\n                                                                    .length >\n                                                                    1 &&\n                                                                  val2.id == -1\n                                                                    ? remove(\n                                                                        subIndex\n                                                                      )\n                                                                    : setFieldValue(\n                                                                        `location[${index}].address[${subIndex}].active`,\n                                                                        0\n                                                                      );\n                                                                }}\n                                                              >\n                                                                <Backspace />\n                                                              </IconButton>\n                                                            ) : (\n                                                              <IconButton\n                                                                color=\"success\"\n                                                                onClick={() => {\n                                                                  setFieldValue(\n                                                                    `location[${index}].address[${subIndex}].active`,\n                                                                    1\n                                                                  );\n                                                                }}\n                                                              >\n                                                                <SettingsBackupRestore />\n                                                              </IconButton>\n                                                            )}\n                                                          </Grid>\n                                                        </Grid>\n                                                      </Grid>\n                                                    )\n                                                  )}\n                                              </Grid>\n                                            )}\n                                          </FieldArray>\n                                        </Grid>\n                                      </Grid>\n                                    </Paper>\n                                  </Grid>\n                                ))}\n                            </Grid>\n                          </Fragment>\n                        )}\n                      </FieldArray>\n                      <br />\n                      <Button type=\"submit\" variant=\"contained\" size=\"small\">\n                        save\n                      </Button>\n                    </Form>\n                  )}\n                </Formik>\n                <br />\n                <Divider />\n                <br />\n                <Typography\n                  variant=\"h6\"\n                  component=\"div\"\n                  sx={{ fontWeight: 600 }}\n                >\n                  Referance\n                </Typography>\n                <Collapse in={paper ? true : false}>\n                  <Alert>Save Referance</Alert>\n                </Collapse>\n                <Formik\n                  initialValues={{ paper: detail.paper }}\n                  onSubmit={(values, setSubmitting) => {\n                    try {\n                      handlePaperSubmit(values);\n                    } catch (err) {\n                      console.log(\"error\", err);\n                    }\n                  }}\n                >\n                  {({\n                    values,\n                    errors,\n                    isSubmitting,\n                    touched,\n                    handleBlur,\n                    setFieldValue,\n                  }) => (\n                    <Form\n                      autoComplete=\"off\"\n                      className={classes.form}\n                      onKeyDown={onKeyDown}\n                    >\n                      <FieldArray name=\"paper\">\n                        {({ push, remove }) => (\n                          <Grid container spacing={2}>\n                            <Grid item xs={12} sx={{ display: \"flex\" }}>\n                              <Typography variant=\"subtitle1\">\n                                Paper Ref\n                              </Typography>\n                              <Button\n                                sx={{\n                                  marginLeft: \"2rem\",\n                                }}\n                                color=\"warning\"\n                                variant=\"contained\"\n                                size=\"small\"\n                                onClick={() =>\n                                  push({\n                                    id: -1,\n                                    detail_id: detail.id,\n                                    name: \"\",\n                                    active: 1,\n                                  })\n                                }\n                              >\n                                Add\n                              </Button>\n                            </Grid>\n                            {values.paper &&\n                              values.paper.map((val, index) => (\n                                <Grid\n                                  item\n                                  key={index}\n                                  xs={4}\n                                  sx={{\n                                    display: \"flex\",\n                                    alignItems: \"flex-end\",\n                                  }}\n                                >\n                                  <Typography\n                                    varaint=\"subtitle1\"\n                                    gutterBottom\n                                    sx={{ marginRight: \"1rem\" }}\n                                  >\n                                    {index + 1}.\n                                  </Typography>\n                                  <Field\n                                    name={`paper[${index}].name`}\n                                    component={TextField}\n                                    size=\"small\"\n                                    fullWidth\n                                    placeholder=\"Paper name\"\n                                  />\n                                  {val.active == 1 ? (\n                                    <IconButton\n                                      color=\"error\"\n                                      onClick={() => {\n                                        values.paper.length > 1 && val.id == -1\n                                          ? remove(index)\n                                          : setFieldValue(\n                                              `paper[${index}].active`,\n                                              0\n                                            );\n                                      }}\n                                    >\n                                      <Backspace />\n                                    </IconButton>\n                                  ) : (\n                                    <IconButton\n                                      color=\"success\"\n                                      onClick={() => {\n                                        setFieldValue(\n                                          `paper[${index}].active`,\n                                          1\n                                        );\n                                      }}\n                                    >\n                                      <SettingsBackupRestore />\n                                    </IconButton>\n                                  )}\n                                </Grid>\n                              ))}\n                          </Grid>\n                        )}\n                      </FieldArray>\n                      <br />\n                      <Button type=\"submit\" variant=\"contained\" size=\"small\">\n                        save\n                      </Button>\n                    </Form>\n                  )}\n                </Formik>\n                <br />\n                <Divider />\n                <br />\n                <Typography\n                  variant=\"h6\"\n                  component=\"div\"\n                  sx={{ fontWeight: 600 }}\n                >\n                  Image\n                </Typography>\n                <Collapse in={image ? true : false}>\n                  <Alert>Save Image</Alert>\n                </Collapse>\n                <Formik\n                  // enableReinitialize\n                  initialValues={{ image: detail.image }}\n                  onSubmit={(values, setSubmitting) => {\n                    try {\n                      handleImageSubmit(values);\n                    } catch (err) {}\n                  }}\n                >\n                  {({\n                    values,\n                    errors,\n                    isSubmitting,\n                    touched,\n                    handleBlur,\n                    setFieldValue,\n                    // handleImagePreview,\n                  }) => (\n                    <Form\n                      autoComplete=\"off\"\n                      className={classes.form}\n                      onKeyDown={onKeyDown}\n                    >\n                      <FieldArray name={`image`}>\n                        {({ push, remove }) => (\n                          <Box>\n                            <label htmlFor=\"button-file\">\n                              <input\n                                type=\"file\"\n                                id=\"button-file\"\n                                accept=\"image/*\"\n                                multiple\n                                hidden\n                                onChange={(e) => {\n                                  const tmp = e.currentTarget.files;\n                                  for (let i = 0; i < tmp.length; i++) {\n                                    let reader = new FileReader();\n                                    const file = e.currentTarget.files[i];\n                                    reader.onloadend = () => {\n                                      push({\n                                        id: -1,\n                                        detail_id: detail.id,\n                                        name: file,\n                                        path: reader.result,\n                                        active: 1,\n                                      });\n                                    };\n                                    console.log(\"loop\", i, \"file\", file);\n                                    reader.readAsDataURL(file);\n                                  }\n                                }}\n                                // onChange={(event) => {\n                                //   setFieldValue(\n                                //     \"file\",\n                                //     event.currentTarget.files[0]\n                                //   );\n                                // }}\n                              />\n\n                              <Button\n                                size=\"small\"\n                                variant=\"contained\"\n                                // sx={{ textTransform: \"none\" }}\n                                component=\"span\"\n                                color=\"warning\"\n                              >\n                                Add image\n                              </Button>\n                            </label>\n                            <Box>\n                              <br />\n                            </Box>\n                            <Grid container spacing={2}>\n                              {values.image.map((val, index) => (\n                                <Grid item key={index}>\n                                  {val.active == 1 ? (\n                                    <Box sx={{ textAlign: \"center\" }}>\n                                      <Box>\n                                        <img\n                                          src={\n                                            val.id != -1\n                                              ? `/${val.path}`\n                                              : val.path\n                                          }\n                                          // width=\"100%\"\n                                          style={{\n                                            maxHeight: \"245px\",\n                                            width: \"auto\",\n                                            margin: \"5px\",\n                                            padding: \"5px\",\n                                            border: \"2px solid #b8b8b8\",\n                                          }}\n                                        />\n                                      </Box>\n                                      <Button\n                                        variant=\"contained\"\n                                        size=\"small\"\n                                        sx={{ textTransform: \"none\" }}\n                                        color=\"error\"\n                                        onClick={() => {\n                                          values.image.length > 1 &&\n                                          val.id == -1\n                                            ? remove(index)\n                                            : setFieldValue(\n                                                `image[${index}].active`,\n                                                0\n                                              );\n                                        }}\n                                      >\n                                        Delete\n                                      </Button>\n                                    </Box>\n                                  ) : (\n                                    <Box sx={{ textAlign: \"center\" }}>\n                                      <Box>\n                                        <img\n                                          src={\n                                            val.id != -1\n                                              ? `/${val.path}`\n                                              : val.path\n                                          }\n                                          // width=\"100%\"\n                                          style={{\n                                            maxHeight: \"245px\",\n                                            width: \"auto\",\n                                            margin: \"5px\",\n                                            padding: \"5px\",\n                                            border: \"2px solid red\",\n                                          }}\n                                        />\n                                      </Box>\n                                      <Button\n                                        variant=\"contained\"\n                                        size=\"small\"\n                                        sx={{ textTransform: \"none\" }}\n                                        color=\"success\"\n                                        onClick={() => {\n                                          setFieldValue(\n                                            `image[${index}].active`,\n                                            1\n                                          );\n                                        }}\n                                      >\n                                        Active\n                                      </Button>\n                                    </Box>\n                                  )}\n                                </Grid>\n                              ))}\n                            </Grid>\n                          </Box>\n                        )}\n                      </FieldArray>\n                      <br />\n                      <Box sx={{ display: \"flex\" }}>\n                        <Button variant=\"contained\" type=\"submit\" size=\"small\">\n                          Save\n                        </Button>\n                      </Box>\n                      <Box style={{ display: \"flex\" }}>\n                        <pre>{JSON.stringify({ values, errors }, null, 4)}</pre>\n                      </Box>\n                    </Form>\n                  )}\n                </Formik>\n                <br />\n                <Divider />\n                <br />\n              </Paper>\n            )}\n          </Container>\n        </ThemeProvider>\n      </StyledEngineProvider>\n      {/* <Box style={{ display: \"flex\" }}>\n<pre>{JSON.stringify({ values, errors }, null, 4)}</pre>\n</Box>  */}\n    </div>\n  );\n};\n\nexport default EditDetailForm;\n","import React from \"react\";\nimport { Route, Redirect, Switch } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { Container } from \"@mui/material\";\nimport {\n  ThemeProvider,\n  StyledEngineProvider,\n  createTheme,\n} from \"@mui/material/styles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport Home from \"./components/pages/Home\";\nimport Login from \"./components/pages/Login\";\nimport InsertForm from \"./components/pages/admin/InsertForm\";\nimport Detail from \"./components/pages/user/Detail\";\nimport Manage from \"./components/pages/admin/Manage\";\nimport EditDetailForm from \"./components/pages/admin/EditDetailForm\";\n\nconst theme = createTheme();\n\nconst useStyles = makeStyles(() => ({\n  content: {\n    // flexGrow: 1,\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n}));\n\nconst Routers = () => {\n  const classes = useStyles();\n  const { user: currentUser } = useSelector((state) => state.auth);\n\n  const AdminRoute = ({ component: Component, ...rest }) => {\n    if (currentUser) {\n      {\n        console.log(`check auth ${currentUser.roles === \"admin\"}`);\n      }\n      return (\n        <Route\n          {...rest}\n          render={(props) =>\n            currentUser.roles === \"admin\" ? (\n              <Component {...props} />\n            ) : (\n              <Redirect to=\"/\" />\n            )\n          }\n        />\n      );\n    } else {\n      return <Redirect to=\"/\" />;\n    }\n  };\n\n  return (\n    <StyledEngineProvider injectFirst>\n      <ThemeProvider theme={theme}>\n        <Container className={classes.content} maxWidth={false} disableGutters>\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/Home\" component={Home} />\n            <Route exact path=\"/detail/:id\" component={Detail} />\n\n            <AdminRoute exact path=\"/Form\" component={InsertForm} />\n            <AdminRoute exact path=\"/Manage\" component={Manage} />\n            <AdminRoute\n              exact\n              path=\"/editDetailForm/:id\"\n              component={EditDetailForm}\n            />\n          </Switch>\n        </Container>\n      </ThemeProvider>\n    </StyledEngineProvider>\n  );\n};\n\nexport default Routers;\n","export const insertList = [\n  {\n    path: \"/Manage\",\n    label: \"Manage\",\n  },\n  {\n    path: \"/Form\",\n    label: \"Form\",\n  },\n];\n","import { Button } from \"@mui/material\";\nimport React from \"react\";\n\nconst ButtonAppBar = (props) => {\n  const { message, link, icon } = props;\n  return (\n    <Button\n      variant=\"text\"\n      color=\"inherit\"\n      align=\"right\"\n      href={link}\n      endIcon={icon}\n      sx={{\n        textTransform: \"none\",\n        fontWeight: 600,\n        borderRight: \"1px solid #fff\",\n        borderRadius: \"0\",\n      }}\n    >\n      {message}\n    </Button>\n  );\n};\n\nexport default ButtonAppBar;\n","import {\n  Button,\n  Menu,\n  MenuItem,\n  MenuList,\n  Popper,\n  Grow,\n  Paper,\n  ClickAwayListener,\n  Link,\n  Icon,\n  Divider,\n} from \"@mui/material\";\nimport React, { useEffect, useState, useRef } from \"react\";\nimport {\n  ThemeProvider,\n  StyledEngineProvider,\n  createTheme,\n} from \"@mui/material/styles\";\n\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { ArrowDropDown } from \"@mui/icons-material\";\n\nconst theme = createTheme({});\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& .MuiPaper-root\": {\n      borderRadius: \"4px\",\n      // marginTop: theme.spacing(1),\n      minWidth: 140,\n      color:\n        theme.palette.mode === \"light\"\n          ? \"rgb(55, 65, 81)\"\n          : theme.palette.grey[300],\n      boxShadow:\n        \"rgb(255, 255, 255) 0px 0px 0px 0px, rgba(0, 0, 0, 0.05) 0px 0px 0px 1px, rgba(0, 0, 0, 0.1) 0px 10px 15px -3px, rgba(0, 0, 0, 0.05) 0px 4px 6px -2px\",\n      \"& .MuiMenu-list\": {\n        padding: \"0 0 0 0\",\n        // padding: \"10px 0\",\n      },\n    },\n  },\n}));\n\nconst MenuBar = (props) => {\n  const { message, icon, listButton } = props;\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <StyledEngineProvider injectFirst>\n      <ThemeProvider theme={theme}>\n        <Button\n          id=\"basic-button\"\n          aria-controls=\"basic-menu\"\n          aria-haspopup=\"true\"\n          aria-expanded={open ? \"true\" : undefined}\n          onClick={handleClick}\n          sx={{\n            color: \"white\",\n            textTransform: \"none\",\n            fontWeight: 600,\n            borderRight: \"1px solid #fff\",\n            borderRadius: \"0\",\n          }}\n        >\n          {message}{\" \"}\n          <Icon sx={{ display: \"flex\", alignItems: \"center\" }}>\n            <ArrowDropDown />\n          </Icon>\n        </Button>\n        <Menu\n          className={classes.root}\n          anchorEl={anchorEl}\n          open={open}\n          onClose={handleClose}\n          elevation={0}\n          // anchorOrigin={{\n          //   vertical: \"bottom\",\n          //   horizontal: \"right\",\n          // }}\n          // transformOrigin={{\n          //   vertical: \"top\",\n          //   horizontal: \"right\",\n          // }}\n        >\n          {listButton &&\n            listButton.map((val, index) => (\n              <Link\n                key={index}\n                href={val.path}\n                underline=\"none\"\n                sx={{ color: \"black\" }}\n              >\n                <MenuItem sx={{ borderBottom: \"1px solid #d4d5d6\" }}>\n                  {val.label}\n                </MenuItem>\n              </Link>\n            ))}\n        </Menu>\n      </ThemeProvider>\n    </StyledEngineProvider>\n  );\n};\n\nexport default MenuBar;\n","import { AppBar, Toolbar, Typography, Box, Button } from \"@mui/material\";\nimport { KeyboardArrowDown } from \"@mui/icons-material\";\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { logout } from \"../../actions/auth\";\nimport { insertList } from \"./listButton/insertList\";\nimport ButtonAppBar from \"./menu/ButtonAppBar\";\nimport MenuBar from \"./menu/MenuBar\";\nimport {\n  ThemeProvider,\n  StyledEngineProvider,\n  createTheme,\n} from \"@mui/material/styles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nconst theme = createTheme({});\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    \"& .MuiAppBar-colorPrimary\": {\n      backgroundColor: \"#002984\",\n    },\n    \"& .MuiToolbar-regular\": {\n      minHeight: \"40px\",\n    },\n    \"& .MuiTypography-h4\": {\n      fontSize: \"1.5rem\",\n    },\n  },\n}));\n\nconst Header = () => {\n  const classes = useStyles();\n  const [statusMenu, setStatusMenu] = useState(false);\n  const dispatch = useDispatch();\n  const { user: currentUser } = useSelector((state) => state.auth);\n\n  useEffect(() => {\n    if (currentUser) {\n      if (currentUser.roles == \"admin\") {\n        setStatusMenu(true);\n      } else {\n        setStatusMenu(false);\n      }\n    }\n  }, []);\n  return (\n    <StyledEngineProvider injectFirst>\n      <ThemeProvider theme={theme}>\n        <div className={classes.appBar}>\n          {console.log(`currentUser : ${currentUser}`)}\n          <AppBar position=\"fixed\">\n            <Toolbar>\n              <Typography\n                variant=\"h4\"\n                component=\"div\"\n                style={{ marginRight: \"20px\" }}\n              >\n                Spider Thailand\n              </Typography>\n              <ButtonAppBar message=\"Home\" link={\"/\"} />\n              {statusMenu && (\n                <MenuBar\n                  message=\"Manage\"\n                  icon={<KeyboardArrowDown />}\n                  listButton={insertList}\n                />\n              )}\n              {/* <ButtonAppBar message=\"Check Data\" link={\"/check\"} /> */}\n              <div style={{ flexGrow: 1 }}></div>\n              {currentUser ? (\n                <Button\n                  variant=\"outlined\"\n                  color=\"inherit\"\n                  align=\"right\"\n                  size=\"small\"\n                  onClick={() => {\n                    window.location.reload();\n                    dispatch(logout());\n                  }}\n                  sx={{\n                    textTransform: \"none\",\n                    fontWeight: 600,\n                  }}\n                >\n                  Logout\n                </Button>\n              ) : (\n                <Button\n                  variant=\"outlined\"\n                  color=\"inherit\"\n                  align=\"right\"\n                  size=\"small\"\n                  href={`/login`}\n                  sx={{ textTransform: \"none\", fontWeight: 600 }}\n                >\n                  Login\n                </Button>\n              )}\n            </Toolbar>\n          </AppBar>\n        </div>\n      </ThemeProvider>\n    </StyledEngineProvider>\n  );\n};\n\nexport default Header;\n","import \"./App.css\";\nimport React, { useState, Fragment } from \"react\";\nimport Routers from \"./Routers\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Header from \"./components/layouts/Header\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\n// import \"leaflet/dist/leaflet.css\";\n\nfunction App() {\n  return (\n    <Router>\n      <div style={{ display: \"flex\" }}>\n        <Fragment>\n          <Header />\n        </Fragment>\n        <Routers />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}